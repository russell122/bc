/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'swiper-icons';
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal; }

:root {
  --swiper-theme-color: #007aff; }

.swiper-container {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1; }

.swiper-container-vertical > .swiper-wrapper {
  flex-direction: column; }

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box; }

.swiper-container-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0); }

.swiper-container-multirow > .swiper-wrapper {
  flex-wrap: wrap; }

.swiper-container-multirow-column > .swiper-wrapper {
  flex-wrap: wrap;
  flex-direction: column; }

.swiper-container-free-mode > .swiper-wrapper {
  transition-timing-function: ease-out;
  margin: 0 auto; }

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform; }

.swiper-slide-invisible-blank {
  visibility: hidden; }

/* Auto Height */
.swiper-container-autoheight, .swiper-container-autoheight .swiper-slide {
  height: auto; }

.swiper-container-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height; }

/* 3D Effects */
.swiper-container-3d {
  perspective: 1200px; }
  .swiper-container-3d .swiper-wrapper, .swiper-container-3d .swiper-slide, .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom, .swiper-container-3d .swiper-cube-shadow {
    transform-style: preserve-3d; }
  .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10; }
  .swiper-container-3d .swiper-slide-shadow-left {
    background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-right {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-top {
    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-bottom {
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }

/* CSS Mode */
.swiper-container-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */ }
  .swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar {
    display: none; }

.swiper-container-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start; }

.swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory; }

.swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory; }

@font-face {
  font-family: "Circe";
  src: url(../fonts/Circe/Circe-Regular.woff) format("woff"), url(../fonts/Circe/Circe-Regular.ttf) format("truetype");
  font-weight: 400;
  font-style: "normal"; }

@font-face {
  font-family: "Circe";
  src: url(../fonts/Circe/Circe-Bold.woff) format("woff"), url(../fonts/Circe/Circe-Bold.ttf) format("truetype");
  font-weight: 700;
  font-style: "normal"; }

@font-face {
  font-family: "Circe";
  src: url(../fonts/Circe/Circe-ExtraBold.woff) format("woff"), url(../fonts/Circe/Circe-ExtraBold.ttf) format("truetype");
  font-weight: 800;
  font-style: "normal"; }

html {
  font-size: 16px;
  height: 100%; }

body {
  height: 100%;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.2;
  color: #000;
  font-family: "Circe", sans-serif; }

*,
*::before,
*::after {
  box-sizing: border-box; }

ul,
ol {
  list-style: none;
  padding: 0; }

a {
  color: #000;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0; }

a:not([class]) {
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto; }

img {
  display: block; }

input,
button,
textarea,
select {
  font: inherit; }

button {
  outline: none !important; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

.wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-image: url("../images/content/hero__fig.png");
  background-repeat: no-repeat;
  background-position: top left;
  background-size: 40%; }
  @media screen and (max-width: 1400px) {
    .wrapper {
      background-size: 50%; } }
  @media screen and (max-width: 992px) {
    .wrapper {
      background-image: none; } }

.content {
  flex: 1 0 auto; }

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1320px;
  width: 100%; }
  @media screen and (max-width: 1199px) {
    .container {
      max-width: 970px; } }
  @media screen and (max-width: 992px) {
    .container {
      max-width: 750px; } }
  @media screen and (max-width: 768px) {
    .container {
      max-width: none; } }

.title-1 {
  font-size: 58px;
  font-weight: 700;
  color: #353535; }
  @media screen and (max-width: 1199px) {
    .title-1 {
      font-size: 50px; } }
  @media screen and (max-width: 992px) {
    .title-1 {
      font-size: 40px; } }
  @media screen and (max-width: 768px) {
    .title-1 {
      font-size: 32px; } }
  .title-1 span {
    font-size: 58px;
    font-weight: 800;
    color: #34A7FF; }
    @media screen and (max-width: 1199px) {
      .title-1 span {
        font-size: 50px; } }
    @media screen and (max-width: 992px) {
      .title-1 span {
        font-size: 40px; } }
    @media screen and (max-width: 768px) {
      .title-1 span {
        font-size: 32px; } }

.button {
  background: linear-gradient(0deg, #34A7FF 0%, #03D0FF 100%);
  border-radius: 25px;
  transition: all ease .2s;
  padding: 13px 23px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  cursor: pointer; }
  .button:hover {
    text-decoration: none;
    transition: all ease .2s;
    background: linear-gradient(0deg, #34A7FF 0%, #05b4db 100%); }
  .button .svg-sprite-icon {
    fill: #fff;
    width: 14px;
    height: 14px;
    margin-right: 14px; }
  .button span {
    color: #fff;
    font-size: 14px;
    font-weight: 700; }

.img {
  display: block;
  max-width: 100%;
  height: auto; }

.g-link {
  position: relative;
  transition: all ease .2s; }
  .g-link:hover {
    color: #FBAE00;
    transition: all ease .2s;
    text-decoration: none; }
    .g-link:hover::before {
      transform: scale(1); }
  .g-link::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: #FBAE00;
    left: 0;
    bottom: -2px;
    transform: scale(0);
    transition: all ease .2s; }

.g-input {
  border: 1px solid #C5C5C5;
  border-radius: 55px;
  font-size: 18px;
  color: #727272;
  font-weight: 800;
  padding: 21px 0px 21px 28px; }
  @media screen and (max-width: 577px) {
    .g-input {
      font-size: 16px;
      padding: 16px 0px 16px 28px; } }

button {
  border: none; }

.header__row {
  padding: 70px 0 210px 0;
  display: flex;
  justify-content: space-between; }
  @media screen and (max-width: 1199px) {
    .header__row {
      padding: 70px 0 90px 0; } }

.header__logo {
  display: flex;
  min-height: 100px; }
  @media screen and (max-width: 577px) {
    .header__logo {
      min-height: 50px;
      align-items: center; } }

.header__right {
  display: flex;
  flex-direction: column; }

.header__right-top {
  display: flex;
  align-items: center;
  margin-bottom: 30px;
  justify-content: flex-end; }
  @media screen and (max-width: 992px) {
    .header__right-top {
      flex-direction: column;
      align-items: flex-start; } }

.header__right-info {
  display: flex;
  flex-direction: column;
  margin-right: 70px; }
  @media screen and (max-width: 992px) {
    .header__right-info {
      text-align: left;
      margin-bottom: 20px; } }
  .header__right-info span {
    font-size: 10px;
    margin-bottom: 5px;
    display: block; }
  .header__right-info a {
    font-size: 18px;
    font-weight: 800;
    text-transform: uppercase; }

@media screen and (max-width: 992px) {
  .header__right-bottom {
    order: -1; } }

.header .header__burger {
  display: none; }

.header .header__mnu {
  flex: 1 1 70%;
  z-index: 2;
  position: relative; }
  .header .header__mnu .header__list {
    display: flex;
    justify-content: space-between; }
    .header .header__mnu .header__list li {
      position: relative;
      margin-right: 50px; }
      .header .header__mnu .header__list li:last-child {
        margin-right: 0; }
      .header .header__mnu .header__list li:hover .header__link {
        color: #FBAE00;
        transition: all ease .2s;
        text-decoration: none; }
      .header .header__mnu .header__list li:hover strong {
        background-color: #FBAE00;
        transition: all ease .2s; }
        .header .header__mnu .header__list li:hover strong::before {
          background-color: #FBAE00;
          transition: all ease .2s; }
        .header .header__mnu .header__list li:hover strong::after {
          background-color: #FBAE00;
          transition: all ease .2s; }
      .header .header__mnu .header__list li strong {
        position: absolute;
        bottom: -15px;
        left: 0;
        width: 6px;
        height: 6px;
        background-color: #fff;
        border-radius: 50%;
        transition: all ease .2s; }
        .header .header__mnu .header__list li strong:before {
          content: '';
          position: absolute;
          bottom: 0px;
          left: 10px;
          width: 6px;
          height: 6px;
          background-color: #fff;
          border-radius: 50%;
          transition: all ease .2s; }
        .header .header__mnu .header__list li strong:after {
          content: '';
          position: absolute;
          bottom: 0px;
          left: 20px;
          width: 6px;
          height: 6px;
          background-color: #fff;
          border-radius: 50%;
          transition: all ease .2s; }
      .header .header__mnu .header__list li .header__link {
        font-size: 16px;
        font-weight: 700;
        position: relative;
        transition: all ease .2s; }

@media screen and (max-width: 992px) {
  body.lock {
    overflow: hidden; }
  .header:before {
    z-index: 3; }
  .header .header__row {
    align-items: center;
    padding: 25px 0; }
    .header .header__row .header__burger {
      display: block;
      position: relative;
      width: 42px;
      height: 42px;
      z-index: 3;
      background: linear-gradient(0deg, #34A7FF 0%, #03D0FF 100%);
      border-radius: 25px; }
      .header .header__row .header__burger:before, .header .header__row .header__burger:after {
        content: '';
        background-color: #fff;
        position: absolute;
        width: 60%;
        height: 3px;
        left: 8px;
        transition: all 0.3s ease 0s; }
      .header .header__row .header__burger:before {
        top: 14px; }
      .header .header__row .header__burger:after {
        bottom: 13px; }
      .header .header__row .header__burger span {
        position: absolute;
        background-color: #fff;
        left: 8px;
        width: 60%;
        height: 3px;
        top: 20px;
        transition: all 0.3s ease 0s; }
    .header .header__row .header__burger.active {
      background: transparent; }
      .header .header__row .header__burger.active:before {
        transform: rotate(45deg);
        top: 20px;
        background-color: #ccc; }
      .header .header__row .header__burger.active:after {
        transform: rotate(-45deg);
        bottom: 19px;
        background-color: #ccc; }
      .header .header__row .header__burger.active span {
        transform: scale(0); }
    .header .header__row .header__right {
      position: fixed;
      top: -100%;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #F4F4F4;
      display: flex;
      align-items: flex-start;
      text-align: center;
      transition: all 0.3s ease 0s;
      overflow: auto;
      padding: 0 40px;
      z-index: 1; }
    .header .header__row .header__mnu .header__list {
      display: block;
      margin-top: 70px;
      text-align: left;
      margin-bottom: 15px; }
      .header .header__row .header__mnu .header__list li {
        margin-bottom: 30px;
        margin-right: 0; }
        .header .header__row .header__mnu .header__list li strong {
          display: none; }
    .header .header__row .header__mnu.active {
      top: 0; }
    .header .header__row .header__right.active {
      top: 0; } }

.modal__form {
  background-image: url("../images/content/modal-bg-1.jpg");
  background-repeat: no-repeat;
  background-position: bottom right;
  min-height: 670px;
  height: 100vh;
  position: relative; }
  .modal__form::before {
    content: '';
    position: absolute;
    top: 0;
    left: 90px;
    width: 66px;
    height: 42px;
    background-image: url("../images/content/modal-el-1.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 768px) {
      .modal__form::before {
        background-size: 50%; } }
  .modal__form::after {
    content: '';
    position: absolute;
    bottom: 90px;
    left: 0px;
    width: 113px;
    height: 267px;
    background-image: url("../images/content/modal-el-2.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 768px) {
      .modal__form::after {
        background-size: 50%; } }
  .modal__form .form__block {
    padding-top: 120px;
    position: relative;
    z-index: 1; }
    @media screen and (max-width: 992px) {
      .modal__form .form__block {
        padding: 120px 20px 0 20px; } }
    @media screen and (max-width: 577px) {
      .modal__form .form__block {
        padding: 60px 20px 0 20px; } }
    .modal__form .form__block h1 {
      max-width: 800px;
      text-align: center;
      margin: 0px auto 40px auto; }
      @media screen and (max-width: 577px) {
        .modal__form .form__block h1 {
          margin: 0px auto 20px auto; } }
  .modal__form .form__inputs {
    max-width: 850px;
    margin: 0 auto 50px auto;
    display: flex;
    justify-content: space-between; }
    @media screen and (max-width: 992px) {
      .modal__form .form__inputs {
        flex-direction: column; }
        .modal__form .form__inputs input {
          margin-bottom: 20px; } }
    @media screen and (max-width: 577px) {
      .modal__form .form__inputs {
        margin: 0px auto 20px auto; } }
  .modal__form .form__btns {
    max-width: 850px;
    margin: 0 auto;
    display: flex;
    justify-content: center; }
    .modal__form .form__btns .button {
      color: #fff;
      width: 292px;
      height: 66px;
      justify-content: center;
      align-items: center;
      border: none;
      border-radius: 55px; }
      @media screen and (max-width: 577px) {
        .modal__form .form__btns .button {
          width: 200px;
          height: 50px; } }

.modal__form2 {
  background-image: url("../images/content/modal-bg-2.jpg");
  background-repeat: no-repeat;
  background-position: top right;
  min-height: 670px;
  height: 100vh;
  position: relative; }
  .modal__form2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 90px;
    width: 66px;
    height: 42px;
    background-image: url("../images/content/modal-el-1.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 768px) {
      .modal__form2::before {
        background-size: 50%; } }
  .modal__form2::after {
    content: '';
    position: absolute;
    bottom: 90px;
    left: 0px;
    width: 113px;
    height: 267px;
    background-image: url("../images/content/modal-el-2.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 768px) {
      .modal__form2::after {
        background-size: 50%; } }
  .modal__form2 .form__block2 {
    position: relative;
    z-index: 1;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; }
    .modal__form2 .form__block2 h1 {
      max-width: 800px;
      text-align: center;
      margin: 0px auto 40px auto; }
      @media screen and (max-width: 577px) {
        .modal__form2 .form__block2 h1 {
          margin: 0px auto 20px auto; } }
  .modal__form2 .form__btns {
    max-width: 850px;
    margin: 0 auto;
    display: flex;
    justify-content: center; }
    .modal__form2 .form__btns .button {
      color: #fff;
      width: 292px;
      height: 66px;
      justify-content: center;
      align-items: center;
      border-radius: 55px; }
      @media screen and (max-width: 577px) {
        .modal__form2 .form__btns .button {
          width: 200px;
          height: 50px; } }

body.show-modal {
  overflow: hidden; }

.vmodal.open .vmodal__overlay {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto; }

.vmodal.open .vmodal__overlay,
.vmodal.open .vmodal__window {
  opacity: 1;
  z-index: 999; }

.vmodal.hide .vmodal__overlay,
.vmodal.hide .vmodal__window {
  opacity: 1;
  z-index: 999; }

.vmodal.open .vmodal__window {
  transform: translateY(1.75rem); }

.vmodal.open .vmodal__overlay {
  background-color: rgba(0, 0, 0, 0.9); }

.vmodal.hide .vmodal__window {
  transform: translateY(-200px); }

.vmodal.hide .vmodal__overlay {
  background-color: rgba(0, 0, 0, 0); }

.vmodal__window, .vmodal__overlay {
  opacity: 0;
  z-index: -1; }

.vmodal__overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0);
  transition: background .2s ease-in; }

.vmodal__window {
  width: 95%;
  margin: 0 auto 1.75rem;
  background: #fff;
  border-radius: 5px;
  transform: translateY(-200px);
  transition: transform .2s ease-in; }
  .vmodal__window .g-btn {
    width: 100%;
    padding: 10px 45px; }
  .vmodal__window label {
    display: inline-flex;
    align-items: flex-start;
    margin-right: 10px;
    margin-bottom: 15px;
    cursor: pointer; }
    .vmodal__window label:hover {
      color: #bbb; }
    .vmodal__window label .filter__checkbox {
      position: relative;
      display: inline-block;
      margin-top: 4px;
      margin-right: 8px;
      margin-left: 8px;
      flex-shrink: 0;
      background-color: #fff;
      border-radius: 4px;
      width: 14px;
      height: 14px; }
      .vmodal__window label .filter__checkbox:after {
        position: absolute;
        content: '';
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 50%;
        height: 50%;
        background-color: transparent;
        border-radius: 2px; }
    .vmodal__window label input[type='checkbox'],
    .vmodal__window label input[type='radio'] {
      display: none; }
      .vmodal__window label input[type='checkbox']:checked ~ .filter__checkbox:after,
      .vmodal__window label input[type='radio']:checked ~ .filter__checkbox:after {
        background-color: #bbb; }

.vmodal__header {
  display: none;
  padding: 10px 15px;
  justify-content: space-between; }

.vmodal__title {
  font-size: 1.5rem;
  font-family: "Circe";
  color: #bbb; }

.vmodal__close {
  font-size: 28px;
  cursor: pointer; }

.vmodal__body p {
  margin: 0 0 5px; }

.vmodal__footer {
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  display: flex;
  padding: 10px 15px;
  border-top: 1px solid #eee;
  align-items: center; }

.vmodal__link {
  display: inline-block;
  margin-left: auto;
  background: transparent;
  /*text-align: right;*/
  font-size: 14px;
  border: none;
  color: #ccc;
  box-shadow: none; }

.hero {
  background-image: url("../images/content/hero__bg.jpg");
  background-repeat: no-repeat;
  min-height: 900px;
  background-position: right 50px;
  padding-top: 50px;
  position: relative; }
  @media screen and (max-width: 992px) {
    .hero {
      background-size: 126%;
      background-position: 65% 31%;
      padding-top: 10px; } }
  @media screen and (max-width: 768px) {
    .hero {
      min-height: 800px; } }
  @media screen and (max-width: 577px) {
    .hero {
      min-height: 750px; } }
  .hero::before {
    content: '';
    position: absolute;
    top: -80px;
    right: 380px;
    width: 66px;
    height: 66px;
    background-image: url("../images/content/hero__el-1.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 992px) {
      .hero::before {
        display: none; } }
  .hero::after {
    content: '';
    position: absolute;
    bottom: 45px;
    right: 560px;
    width: 169px;
    height: 169px;
    background-image: url("../images/content/hero__el-2.png");
    background-repeat: no-repeat; }
    @media screen and (max-width: 992px) {
      .hero::after {
        display: none; } }
  .hero__fig {
    background-image: url("../images/content/hero-fig.png");
    background-repeat: no-repeat;
    height: 100%;
    width: 100%;
    position: absolute;
    background-position: 7% 100%;
    bottom: -100px; }
    @media screen and (max-width: 992px) {
      .hero__fig {
        background-image: url("../images/content/hero-fig-2.png");
        background-position: -4% 100%;
        bottom: 0; } }
  .hero__block {
    position: relative; }
    .hero__block h1 {
      max-width: 750px;
      margin-bottom: 40px; }
  .hero__inputs {
    max-width: 850px;
    display: flex;
    justify-content: space-between;
    margin-bottom: 100px; }
    @media screen and (max-width: 992px) {
      .hero__inputs {
        flex-direction: column;
        margin-bottom: 120px; }
        .hero__inputs input {
          margin-bottom: 14px; } }
    @media screen and (max-width: 992px) and (max-width: 577px) {
      .hero__inputs input {
        width: 100%; } }
    .hero__inputs .button {
      width: 266px;
      height: 65px;
      border-radius: 55px; }
      @media screen and (max-width: 577px) {
        .hero__inputs .button {
          width: 100%;
          height: 53px; } }
  .hero__info {
    max-width: 500px; }
    .hero__info p {
      font-size: 28px;
      color: #353535;
      text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
      font-weight: 700;
      margin-bottom: 30px; }
      @media screen and (max-width: 768px) {
        .hero__info p {
          font-size: 22px; } }
      .hero__info p span {
        color: #FBAE00; }
    .hero__info h3 {
      font-size: 38px;
      font-weight: 800;
      text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
      color: #353535; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJzdHlsZXMuY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9zcmMvc3dpcGVyLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL3NyYy9jb21wb25lbnRzL2NvcmUvY29yZS5zY3NzIiwidXRpbHMvZm9udHMuc2NzcyIsInN0eWxlcy5zY3NzIiwidXRpbHMvdmFycy5zY3NzIiwibW9kdWxlcy9oZWFkZXIvaGVhZGVyLnNjc3MiLCJtb2R1bGVzL21vZGFsL21vZGFsLnNjc3MiLCJ1dGlscy9taXhpbnMuc2NzcyIsIm1vZHVsZXMvaGVyby9oZXJvLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQUE7QUFFQTsrRUNBK0U7QURHL0U7OztFQ0NFO0FESUY7RUFDRSxpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLDhCQUE4QjtFQUFFLE1BQUEsRUFBTzs7QUFHekM7K0VDRCtFO0FESS9FOztFQ0RFO0FES0Y7RUFDRSxTQUFTLEVBQUE7O0FBR1g7O0VDSEU7QURPRjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7OztFQ0pFO0FEU0Y7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCLEVBQUE7O0FBR2xCOytFQ1IrRTtBRFcvRTs7O0VDUEU7QURZRjtFQUNFLHVCQUF1QjtFQUFFLE1BQUE7RUFDekIsU0FBUztFQUFFLE1BQUE7RUFDWCxpQkFBaUI7RUFBRSxNQUFBLEVBQU87O0FBRzVCOzs7RUNORTtBRFdGO0VBQ0UsaUNBQWlDO0VBQUUsTUFBQTtFQUNuQyxjQUFjO0VBQUUsTUFBQSxFQUFPOztBQUd6QjsrRUNSK0U7QURXL0U7O0VDUkU7QURZRjtFQUNFLDZCQUE2QixFQUFBOztBQUcvQjs7O0VDVEU7QURjRjtFQUNFLG1CQUFtQjtFQUFFLE1BQUE7RUFDckIsMEJBQTBCO0VBQUUsTUFBQTtFQUM1Qix5Q0FBaUM7RUFBakMsaUNBQWlDO0VBQUUs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Q1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQiw0QkFBNEI7SUFDNUIsY0FBYyxFQUFBO0lBQ2Q7TUFSRDtRQVNFLHlEQUF5RDtRQUN6RCw2QkFBNkI7UUFDN0IsU0FBUyxFQUFBLEVBRVY7RUFDRDtJQUNDLGtCQUFrQixFQUFBO0lBRGxCO01BSUMsZ0JBQWdCO01BQ2hCLG1CQUFtQixFQUFBO0VBR3JCO0lBQ0MsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsb0JBQW9CLEVBQUE7SUFDcEI7TUFMRDtRQU1FLHNCQUFzQjtRQUN0QixvQkFBb0IsRUFBQTtRQVByQjtVQVNFLG1CQUFtQixFQUFBLEVBSW5CO0lBSEE7TUFWRjtRQVdHLFdBQVcsRUFBQSxFQUVaO0lBYkY7TUFnQkMsWUFBWTtNQUNaLFlBQVk7TUFDWixtQkFBbUIsRUFBQTtNQUNuQjtRQW5CRDtVQW9CRSxXQUFXO1VBQ1gsWUFBWSxFQUFBLEVBRWI7RUFFRjtJQUNDLGdCQUFnQixFQUFBO0lBRGhCO01BR0MsZUFBZTtNQUNmLGNKNUZhO01JNkZiLDRDQUE0QztNQUM1QyxnQkFBZ0I7TUFDaEIsbUJBQW1CLEVBQUE7TUFDbkI7UUFSRDtVQVNFLGVBQWUsRUFBQSxFQUtoQjtNQWREO1FBWUUsY0poR2EsRUFBQTtJSW9GZjtNQWdCQyxlQUFlO01BQ2YsZ0JBQWdCO01BQ2hCLDRDQUE0QztNQUM1QyxjSjNHYSxFQUFBIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3N3aXBlci1pY29ucyc7XG4gIHNyYzogdXJsKFwiZGF0YTphcHBsaWNhdGlvbi9mb250LXdvZmY7Y2hhcnNldD11dGYtODtiYXNlNjQsIGQwOUdSZ0FCQUFBQUFBWmdBQkFBQUFBQURBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCR1JsUk5BQUFHUkFBQUFCb0FBQUFjaTZxSGtVZEVSVVlBQUFXZ0FBQUFJd0FBQUNRQVlBQlhSMUJQVXdBQUJoUUFBQUF1QUFBQU51QVk3K3hIVTFWQ0FBQUZ4QUFBQUZBQUFBQm0yZlBjelU5VEx6SUFBQUhjQUFBQVNnQUFBR0JQOVY1UlkyMWhjQUFBQWtRQUFBQ0lBQUFCWXQ2RjBjQmpkblFnQUFBQ3pBQUFBQVFBQUFBRUFCRUJSR2RoYzNBQUFBV1lBQUFBQ0FBQUFBai8vd0FEWjJ4NVpnQUFBeXdBQUFETUFBQUQyTUh0cnlWb1pXRmtBQUFCYkFBQUFEQUFBQUEyRTIrZW9XaG9aV0VBQUFHY0FBQUFId0FBQUNRQzlnRHphRzEwZUFBQUFpZ0FBQUFaQUFBQXJnSmtBQkZzYjJOaEFBQUMwQUFBQUZvQUFBQmFGUUFVR0cxaGVIQUFBQUc4QUFBQUh3QUFBQ0FBY0FCQWJtRnRaUUFBQS9nQUFBRTVBQUFDWHZGZEJ3bHdiM04wQUFBRk5BQUFBR0lBQUFDRTVzNzRoWGphWTJCa1lHQUFZcGY1SHUvaitXMitNbkF6TVlEQXphWDZRakQ2LzQvL0J4ajVHQThBdVJ3TVlHa0FQeXdMMTNqYVkyQmtZR0E4OFA4QWd4NGorLzhmUURZZkExQUVCV2dEQUlCMkJPb0FlTnBqWUdSZ1lOQmg0R2RnWWdBQkVNbklBQkp6WU5BRENRQUFDV2dBc1FCNDJtTmdZZnpDT0lHQmxZR0IwWWN4allHQndSMUtmMldRWkdoaFlHQmlZR1ZtZ0FGR0JpUVFrT2Fhd3REQW9NQlF4WGpnL3dFR1BjWUREQTR3TlVBMkNDZ3dzQUFBTzRFTDZnQUFlTnBqMk0wZ3lBQUNxeGdHTldCa1oyRDQvd01BK3hrRGRnQUFBSGphWTJCZ1lHYUFZQmtHUmdZUWlBSHlHTUY4RmdZSElNM0R3TUhBQkdRck1PZ3lXRExFTTFUOS93OFVCZkVNZ0x6RS8vLy9QLzUvL2YvVi94dityNGVhQUFlTWJBeHdJVVltSU1IRWdLWUFZalVjc0RBd3NMS3hjM0J5Y2ZQdzhqRVFBL2daQkFTRmhFVkV4Y1FsSktXa1pXVGw1QlVVbFpSVlZOWFVOVFFaQmdNQUFNUitFK2dBRVFGRUFBQUFLZ0FxQUNvQU5BQStBRWdBVWdCY0FHWUFjQUI2QUlRQWpnQ1lBS0lBckFDMkFNQUF5Z0RVQU40QTZBRHlBUHdCQmdFUUFSb0JKQUV1QVRnQlFnRk1BVllCWUFGcUFYUUJmZ0dJQVpJQm5BR21BYklCemdIc0FBQjQydTJOTVE2Q1VBeUdXNTY4eDlBbmVZWWdtNE1KYmhLRmFFeElPQVZYOEFwZXdTdDRCaWM0QWZlQWlkM1ZPQml4RHhmUFlFemE1TytYZmkwNFlBRGdnaVVJVUxDdUVKSzhWaE80YlN2cGRua3RISTVRQ1l0ZGkyc2w4Wm5YYUhscVVyTkt6ZEtjVDhjamxxK3J3WlN2SVZjek5pZXpzZm5QL3V6bm1mUEZCTk9ETTJLN01UUTQ1WUVBWnFHUDgxQW1HR2NGM2lQcU9vcDByMVNQVGFUYlZrZlVlNEhYajk3d1lFK3lOd1dZeHdXdTR2MXVnV0hnbzNTMVhkWkVWcVdNN0VUMGNmbkxHeFdma2dSNDJvMlB2V3JETUJTRmovSUhMYUYwektqUmdkaVZNd1NjTlJBb1dVb0g3OFkyaWNCL3lJWTA5QW42QUgyQmR1L1VCK3l4b3BZc2hRaUV2bnZ1MGRVUmdEdDhRZUM4UER3N0ZwamkzZkVBNHovUEVKNllPQjVoS2g0ZGozRXZYaHhQcUgvU0tVWTNySjdzclo0RlpuaDFQTUF0UGh3UDZmbDJQTUpNUERnZVE0clk4WVQ2R3phbzBlQUVBNDA5RHVnZ21UbkZuT2NTQ2lFaUxNZ3hDaVRJNkNxNURaVWQzUW1wMTB2TzBMYUxUZDJjak40Zk91bWxjN2xVWWJTUWNaRmt1dFJHN2c2SktaS3kwUm1kTFk2ODBDRG5FSitVTWtwRkZlMVJON254ZFZwWHJDNGFUdG5hdXJPblllcmNaZzJZVm1MTi9kL2djemZFaW1yRS9mcy9iT3VxMjlabW44dGxvT1JhWGdaZ0dhNzh5TzkvY25YbTJCcGFHdnEyNUR2OVM0RTkrNVNJYzlQcXVwSktoWUZTU2w0NytRY3IxbVlOQUFBQWVOcHR3MGNLd2tBQUFNRFpKQThRN09VSnZrTHNQZlo2ekZWRVJQeThxSGgyWUVSKzNpL0JQODN2SUJMTHlTc29LaW1ycUtxcGEyaHA2K2pxNlJzWUdobWJtSnFaU3kwc3JheHRiTzNzSFJ5ZG5FTVU0dVI2eXg3SkpYdmVQN1dyRHljQUFBQUFBQUgvL3dBQ2VOcGpZR1JnWU9BQlloa2daZ0pDWmdaTkJrWUdMUVp0SUpzRkxNWUFBQXczQUxnQWVOb2xpekVLZ0RBUUJDY2hSYkMyc0ZFUjBZRDZxVlFpQkN2L0g5ZXpHSTZaNVhCQXc4Q0JLL201aVFRVmF1VmJYTG5Pck1adjJvTGRLRmE4UGp1cnUyaEp6R2FibU9TTHpOTXp2dXRwQjNONDJtTmdaR0JnNEdLUVl6QmhZTXhKTE1sajRHQmdBWW93L1AvUEFKSmhMTTZzU29XS2ZXQ0FBd0RBamdiUkFBQjQybU5nWUdCa0FJSWJDWm81SVBybVVuMGhHQTBBTzhFRlRRQUFcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbjpyb290IHtcbiAgLS1zd2lwZXItdGhlbWUtY29sb3I6ICMwMDdhZmY7IH1cblxuLnN3aXBlci1jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIC8qIEZpeCBvZiBXZWJraXQgZmxpY2tlcmluZyAqL1xuICB6LWluZGV4OiAxOyB9XG5cbi5zd2lwZXItY29udGFpbmVyLXZlcnRpY2FsID4gLnN3aXBlci13cmFwcGVyIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4uc3dpcGVyLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLnN3aXBlci1jb250YWluZXItYW5kcm9pZCAuc3dpcGVyLXNsaWRlLFxuLnN3aXBlci13cmFwcGVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDAsIDApOyB9XG5cbi5zd2lwZXItY29udGFpbmVyLW11bHRpcm93ID4gLnN3aXBlci13cmFwcGVyIHtcbiAgZmxleC13cmFwOiB3cmFwOyB9XG5cbi5zd2lwZXItY29udGFpbmVyLW11bHRpcm93LWNvbHVtbiA+IC5zd2lwZXItd3JhcHBlciB7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4uc3dpcGVyLWNvbnRhaW5lci1mcmVlLW1vZGUgPiAuc3dpcGVyLXdyYXBwZXIge1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5zd2lwZXItc2xpZGUge1xuICBmbGV4LXNocmluazogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07IH1cblxuLnN3aXBlci1zbGlkZS1pbnZpc2libGUtYmxhbmsge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLyogQXV0byBIZWlnaHQgKi9cbi5zd2lwZXItY29udGFpbmVyLWF1dG9oZWlnaHQsIC5zd2lwZXItY29udGFpbmVyLWF1dG9oZWlnaHQgLnN3aXBlci1zbGlkZSB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4uc3dpcGVyLWNvbnRhaW5lci1hdXRvaGVpZ2h0IC5zd2lwZXItd3JhcHBlciB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIGhlaWdodDsgfVxuXG4vKiAzRCBFZmZlY3RzICovXG4uc3dpcGVyLWNvbnRhaW5lci0zZCB7XG4gIHBlcnNwZWN0aXZlOiAxMjAwcHg7IH1cbiAgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci13cmFwcGVyLCAuc3dpcGVyLWNvbnRhaW5lci0zZCAuc3dpcGVyLXNsaWRlLCAuc3dpcGVyLWNvbnRhaW5lci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LCAuc3dpcGVyLWNvbnRhaW5lci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLWNvbnRhaW5lci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sIC5zd2lwZXItY29udGFpbmVyLTNkIC5zd2lwZXItY3ViZS1zaGFkb3cge1xuICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7IH1cbiAgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCwgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQsIC5zd2lwZXItY29udGFpbmVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCwgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHotaW5kZXg6IDEwOyB9XG4gIC5zd2lwZXItY29udGFpbmVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMCkpOyB9XG4gIC5zd2lwZXItY29udGFpbmVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7IH1cbiAgLnN3aXBlci1jb250YWluZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMCkpOyB9XG4gIC5zd2lwZXItY29udGFpbmVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDApKTsgfVxuXG4vKiBDU1MgTW9kZSAqL1xuLnN3aXBlci1jb250YWluZXItY3NzLW1vZGUgPiAuc3dpcGVyLXdyYXBwZXIge1xuICBvdmVyZmxvdzogYXV0bztcbiAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuICAvKiBGb3IgRmlyZWZveCAqL1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG4gIC8qIEZvciBJbnRlcm5ldCBFeHBsb3JlciBhbmQgRWRnZSAqLyB9XG4gIC5zd2lwZXItY29udGFpbmVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4uc3dpcGVyLWNvbnRhaW5lci1jc3MtbW9kZSA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGUge1xuICBzY3JvbGwtc25hcC1hbGlnbjogc3RhcnQgc3RhcnQ7IH1cblxuLnN3aXBlci1jb250YWluZXItaG9yaXpvbnRhbC5zd2lwZXItY29udGFpbmVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnk7IH1cblxuLnN3aXBlci1jb250YWluZXItdmVydGljYWwuc3dpcGVyLWNvbnRhaW5lci1jc3MtbW9kZSA+IC5zd2lwZXItd3JhcHBlciB7XG4gIHNjcm9sbC1zbmFwLXR5cGU6IHkgbWFuZGF0b3J5OyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJDaXJjZVwiO1xuICBzcmM6IHVybCguLi9mb250cy9DaXJjZS9DaXJjZS1SZWd1bGFyLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi9mb250cy9DaXJjZS9DaXJjZS1SZWd1bGFyLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IFwibm9ybWFsXCI7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlXCI7XG4gIHNyYzogdXJsKC4uL2ZvbnRzL0NpcmNlL0NpcmNlLUJvbGQud29mZikgZm9ybWF0KFwid29mZlwiKSwgdXJsKC4uL2ZvbnRzL0NpcmNlL0NpcmNlLUJvbGQudHRmKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogXCJub3JtYWxcIjsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ2lyY2VcIjtcbiAgc3JjOiB1cmwoLi4vZm9udHMvQ2lyY2UvQ2lyY2UtRXh0cmFCb2xkLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi9mb250cy9DaXJjZS9DaXJjZS1FeHRyYUJvbGQudHRmKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1zdHlsZTogXCJub3JtYWxcIjsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBjb2xvcjogIzAwMDtcbiAgZm9udC1mYW1pbHk6IFwiQ2lyY2VcIiwgc2Fucy1zZXJpZjsgfVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbmEge1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxudWwsXG5vbCxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwOyB9XG5cbmE6bm90KFtjbGFzc10pIHtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvOyB9XG5cbmltZyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250OiBpbmhlcml0OyB9XG5cbmJ1dHRvbiB7XG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvLFxudGV4dGFyZWEge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiBub25lOyB9XG5cbnNlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuaW5wdXQsXG5zZWxlY3QsXG5idXR0b24ge1xuICBvdXRsaW5lOiBub25lOyB9XG5cbi53cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvY29udGVudC9oZXJvX19maWcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDtcbiAgYmFja2dyb3VuZC1zaXplOiA0MCU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgLndyYXBwZXIge1xuICAgICAgYmFja2dyb3VuZC1zaXplOiA1MCU7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAgIC53cmFwcGVyIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IH0gfVxuXG4uY29udGVudCB7XG4gIGZsZXg6IDEgMCBhdXRvOyB9XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxNXB4O1xuICBtYXgtd2lkdGg6IDEzMjBweDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTE5OXB4KSB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDk3MHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogNzUwcHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiBub25lOyB9IH1cblxuLnRpdGxlLTEge1xuICBmb250LXNpemU6IDU4cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMzUzNTM1OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xuICAgIC50aXRsZS0xIHtcbiAgICAgIGZvbnQtc2l6ZTogNTBweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgLnRpdGxlLTEge1xuICAgICAgZm9udC1zaXplOiA0MHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAudGl0bGUtMSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICAudGl0bGUtMSBzcGFuIHtcbiAgICBmb250LXNpemU6IDU4cHg7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBjb2xvcjogIzM0QTdGRjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xuICAgICAgLnRpdGxlLTEgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogNTBweDsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAgIC50aXRsZS0xIHNwYW4ge1xuICAgICAgICBmb250LXNpemU6IDQwcHg7IH0gfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAudGl0bGUtMSBzcGFuIHtcbiAgICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cblxuLmJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCAjMzRBN0ZGIDAlLCAjMDNEMEZGIDEwMCUpO1xuICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG4gIHBhZGRpbmc6IDEzcHggMjNweDtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5idXR0b246aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsICMzNEE3RkYgMCUsICMwNWI0ZGIgMTAwJSk7IH1cbiAgLmJ1dHRvbiAuc3ZnLXNwcml0ZS1pY29uIHtcbiAgICBmaWxsOiAjZmZmO1xuICAgIHdpZHRoOiAxNHB4O1xuICAgIGhlaWdodDogMTRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7IH1cbiAgLmJ1dHRvbiBzcGFuIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4uaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5nLWxpbmsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuICAuZy1saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogI0ZCQUUwMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLmctbGluazpob3Zlcjo6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgLmctbGluazo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZCQUUwMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogLTJweDtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuXG4uZy1pbnB1dCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNDNUM1QzU7XG4gIGJvcmRlci1yYWRpdXM6IDU1cHg7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgY29sb3I6ICM3MjcyNzI7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIHBhZGRpbmc6IDIxcHggMHB4IDIxcHggMjhweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xuICAgIC5nLWlucHV0IHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIHBhZGRpbmc6IDE2cHggMHB4IDE2cHggMjhweDsgfSB9XG5cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTsgfVxuXG4uaGVhZGVyX19yb3cge1xuICBwYWRkaW5nOiA3MHB4IDAgMjEwcHggMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xuICAgIC5oZWFkZXJfX3JvdyB7XG4gICAgICBwYWRkaW5nOiA3MHB4IDAgOTBweCAwOyB9IH1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XG4gICAgLmhlYWRlcl9fbG9nbyB7XG4gICAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbi5oZWFkZXJfX3JpZ2h0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4uaGVhZGVyX19yaWdodC10b3Age1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgLmhlYWRlcl9fcmlnaHQtdG9wIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfSB9XG5cbi5oZWFkZXJfX3JpZ2h0LWluZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4tcmlnaHQ6IDcwcHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAuaGVhZGVyX19yaWdodC1pbmZvIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9IH1cbiAgLmhlYWRlcl9fcmlnaHQtaW5mbyBzcGFuIHtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5oZWFkZXJfX3JpZ2h0LWluZm8gYSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuaGVhZGVyX19yaWdodC1ib3R0b20ge1xuICAgIG9yZGVyOiAtMTsgfSB9XG5cbi5oZWFkZXIgLmhlYWRlcl9fYnVyZ2VyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uaGVhZGVyIC5oZWFkZXJfX21udSB7XG4gIGZsZXg6IDEgMSA3MCU7XG4gIHotaW5kZXg6IDI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVhZGVyIC5oZWFkZXJfX21udSAuaGVhZGVyX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAgIC5oZWFkZXIgLmhlYWRlcl9fbW51IC5oZWFkZXJfX2xpc3QgbGkge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1MHB4OyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX21udSAuaGVhZGVyX19saXN0IGxpOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAgIC5oZWFkZXIgLmhlYWRlcl9fbW51IC5oZWFkZXJfX2xpc3QgbGk6aG92ZXIgLmhlYWRlcl9fbGluayB7XG4gICAgICAgIGNvbG9yOiAjRkJBRTAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgICAgLmhlYWRlciAuaGVhZGVyX19tbnUgLmhlYWRlcl9fbGlzdCBsaTpob3ZlciBzdHJvbmcge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkJBRTAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7IH1cbiAgICAgICAgLmhlYWRlciAuaGVhZGVyX19tbnUgLmhlYWRlcl9fbGlzdCBsaTpob3ZlciBzdHJvbmc6OmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZCQUUwMDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7IH1cbiAgICAgICAgLmhlYWRlciAuaGVhZGVyX19tbnUgLmhlYWRlcl9fbGlzdCBsaTpob3ZlciBzdHJvbmc6OmFmdGVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkJBRTAwO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuICAgICAgLmhlYWRlciAuaGVhZGVyX19tbnUgLmhlYWRlcl9fbGlzdCBsaSBzdHJvbmcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogLTE1cHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiA2cHg7XG4gICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuICAgICAgICAuaGVhZGVyIC5oZWFkZXJfX21udSAuaGVhZGVyX19saXN0IGxpIHN0cm9uZzpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3R0b206IDBweDtcbiAgICAgICAgICBsZWZ0OiAxMHB4O1xuICAgICAgICAgIHdpZHRoOiA2cHg7XG4gICAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIGVhc2UgLjJzOyB9XG4gICAgICAgIC5oZWFkZXIgLmhlYWRlcl9fbW51IC5oZWFkZXJfX2xpc3QgbGkgc3Ryb25nOmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiAwcHg7XG4gICAgICAgICAgbGVmdDogMjBweDtcbiAgICAgICAgICB3aWR0aDogNnB4O1xuICAgICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuICAgICAgLmhlYWRlciAuaGVhZGVyX19tbnUgLmhlYWRlcl9fbGlzdCBsaSAuaGVhZGVyX19saW5rIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIC4yczsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICBib2R5LmxvY2sge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmhlYWRlcjpiZWZvcmUge1xuICAgIHotaW5kZXg6IDM7IH1cbiAgLmhlYWRlciAuaGVhZGVyX19yb3cge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjVweCAwOyB9XG4gICAgLmhlYWRlciAuaGVhZGVyX19yb3cgLmhlYWRlcl9fYnVyZ2VyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDQycHg7XG4gICAgICBoZWlnaHQ6IDQycHg7XG4gICAgICB6LWluZGV4OiAzO1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsICMzNEE3RkYgMCUsICMwM0QwRkYgMTAwJSk7XG4gICAgICBib3JkZXItcmFkaXVzOiAyNXB4OyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXI6YmVmb3JlLCAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXI6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogNjAlO1xuICAgICAgICBoZWlnaHQ6IDNweDtcbiAgICAgICAgbGVmdDogOHB4O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzOyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXI6YmVmb3JlIHtcbiAgICAgICAgdG9wOiAxNHB4OyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXI6YWZ0ZXIge1xuICAgICAgICBib3R0b206IDEzcHg7IH1cbiAgICAgIC5oZWFkZXIgLmhlYWRlcl9fcm93IC5oZWFkZXJfX2J1cmdlciBzcGFuIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICBsZWZ0OiA4cHg7XG4gICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB0b3A6IDIwcHg7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7IH1cbiAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXIuYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXIuYWN0aXZlOmJlZm9yZSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjOyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXIuYWN0aXZlOmFmdGVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgYm90dG9tOiAxOXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjOyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX3JvdyAuaGVhZGVyX19idXJnZXIuYWN0aXZlIHNwYW4ge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApOyB9XG4gICAgLmhlYWRlciAuaGVhZGVyX19yb3cgLmhlYWRlcl9fcmlnaHQge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiAtMTAwJTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGNEY0RjQ7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICBwYWRkaW5nOiAwIDQwcHg7XG4gICAgICB6LWluZGV4OiAxOyB9XG4gICAgLmhlYWRlciAuaGVhZGVyX19yb3cgLmhlYWRlcl9fbW51IC5oZWFkZXJfX2xpc3Qge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiA3MHB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7IH1cbiAgICAgIC5oZWFkZXIgLmhlYWRlcl9fcm93IC5oZWFkZXJfX21udSAuaGVhZGVyX19saXN0IGxpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgICAgIC5oZWFkZXIgLmhlYWRlcl9fcm93IC5oZWFkZXJfX21udSAuaGVhZGVyX19saXN0IGxpIHN0cm9uZyB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5oZWFkZXIgLmhlYWRlcl9fcm93IC5oZWFkZXJfX21udS5hY3RpdmUge1xuICAgICAgdG9wOiAwOyB9XG4gICAgLmhlYWRlciAuaGVhZGVyX19yb3cgLmhlYWRlcl9fcmlnaHQuYWN0aXZlIHtcbiAgICAgIHRvcDogMDsgfSB9XG5cbi5tb2RhbF9fZm9ybSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9jb250ZW50L21vZGFsLWJnLTEuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b20gcmlnaHQ7XG4gIG1pbi1oZWlnaHQ6IDY3MHB4O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm1vZGFsX19mb3JtOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogOTBweDtcbiAgICB3aWR0aDogNjZweDtcbiAgICBoZWlnaHQ6IDQycHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtZWwtMS5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubW9kYWxfX2Zvcm06OmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogNTAlOyB9IH1cbiAgLm1vZGFsX19mb3JtOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogOTBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgd2lkdGg6IDExM3B4O1xuICAgIGhlaWdodDogMjY3cHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtZWwtMi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubW9kYWxfX2Zvcm06OmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1MCU7IH0gfVxuICAubW9kYWxfX2Zvcm0gLmZvcm1fX2Jsb2NrIHtcbiAgICBwYWRkaW5nLXRvcDogMTIwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDE7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAgICAgLm1vZGFsX19mb3JtIC5mb3JtX19ibG9jayB7XG4gICAgICAgIHBhZGRpbmc6IDEyMHB4IDIwcHggMCAyMHB4OyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xuICAgICAgLm1vZGFsX19mb3JtIC5mb3JtX19ibG9jayB7XG4gICAgICAgIHBhZGRpbmc6IDYwcHggMjBweCAwIDIwcHg7IH0gfVxuICAgIC5tb2RhbF9fZm9ybSAuZm9ybV9fYmxvY2sgaDEge1xuICAgICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMHB4IGF1dG8gNDBweCBhdXRvOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xuICAgICAgICAubW9kYWxfX2Zvcm0gLmZvcm1fX2Jsb2NrIGgxIHtcbiAgICAgICAgICBtYXJnaW46IDBweCBhdXRvIDIwcHggYXV0bzsgfSB9XG4gIC5tb2RhbF9fZm9ybSAuZm9ybV9faW5wdXRzIHtcbiAgICBtYXgtd2lkdGg6IDg1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvIDUwcHggYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgICAubW9kYWxfX2Zvcm0gLmZvcm1fX2lucHV0cyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAgICAgLm1vZGFsX19mb3JtIC5mb3JtX19pbnB1dHMgaW5wdXQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH0gfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XG4gICAgICAubW9kYWxfX2Zvcm0gLmZvcm1fX2lucHV0cyB7XG4gICAgICAgIG1hcmdpbjogMHB4IGF1dG8gMjBweCBhdXRvOyB9IH1cbiAgLm1vZGFsX19mb3JtIC5mb3JtX19idG5zIHtcbiAgICBtYXgtd2lkdGg6IDg1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICAubW9kYWxfX2Zvcm0gLmZvcm1fX2J0bnMgLmJ1dHRvbiB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHdpZHRoOiAyOTJweDtcbiAgICAgIGhlaWdodDogNjZweDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDU1cHg7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XG4gICAgICAgIC5tb2RhbF9fZm9ybSAuZm9ybV9fYnRucyAuYnV0dG9uIHtcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgaGVpZ2h0OiA1MHB4OyB9IH1cblxuLm1vZGFsX19mb3JtMiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9jb250ZW50L21vZGFsLWJnLTIuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgcmlnaHQ7XG4gIG1pbi1oZWlnaHQ6IDY3MHB4O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm1vZGFsX19mb3JtMjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDkwcHg7XG4gICAgd2lkdGg6IDY2cHg7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9jb250ZW50L21vZGFsLWVsLTEucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLm1vZGFsX19mb3JtMjo6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1MCU7IH0gfVxuICAubW9kYWxfX2Zvcm0yOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogOTBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgd2lkdGg6IDExM3B4O1xuICAgIGhlaWdodDogMjY3cHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtZWwtMi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubW9kYWxfX2Zvcm0yOjphZnRlciB7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogNTAlOyB9IH1cbiAgLm1vZGFsX19mb3JtMiAuZm9ybV9fYmxvY2syIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAubW9kYWxfX2Zvcm0yIC5mb3JtX19ibG9jazIgaDEge1xuICAgICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMHB4IGF1dG8gNDBweCBhdXRvOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xuICAgICAgICAubW9kYWxfX2Zvcm0yIC5mb3JtX19ibG9jazIgaDEge1xuICAgICAgICAgIG1hcmdpbjogMHB4IGF1dG8gMjBweCBhdXRvOyB9IH1cbiAgLm1vZGFsX19mb3JtMiAuZm9ybV9fYnRucyB7XG4gICAgbWF4LXdpZHRoOiA4NTBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gICAgLm1vZGFsX19mb3JtMiAuZm9ybV9fYnRucyAuYnV0dG9uIHtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgd2lkdGg6IDI5MnB4O1xuICAgICAgaGVpZ2h0OiA2NnB4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTVweDsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcbiAgICAgICAgLm1vZGFsX19mb3JtMiAuZm9ybV9fYnRucyAuYnV0dG9uIHtcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgaGVpZ2h0OiA1MHB4OyB9IH1cblxuYm9keS5zaG93LW1vZGFsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4udm1vZGFsLm9wZW4gLnZtb2RhbF9fb3ZlcmxheSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bzsgfVxuXG4udm1vZGFsLm9wZW4gLnZtb2RhbF9fb3ZlcmxheSxcbi52bW9kYWwub3BlbiAudm1vZGFsX193aW5kb3cge1xuICBvcGFjaXR5OiAxO1xuICB6LWluZGV4OiA5OTk7IH1cblxuLnZtb2RhbC5oaWRlIC52bW9kYWxfX292ZXJsYXksXG4udm1vZGFsLmhpZGUgLnZtb2RhbF9fd2luZG93IHtcbiAgb3BhY2l0eTogMTtcbiAgei1pbmRleDogOTk5OyB9XG5cbi52bW9kYWwub3BlbiAudm1vZGFsX193aW5kb3cge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMS43NXJlbSk7IH1cblxuLnZtb2RhbC5vcGVuIC52bW9kYWxfX292ZXJsYXkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOSk7IH1cblxuLnZtb2RhbC5oaWRlIC52bW9kYWxfX3dpbmRvdyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwcHgpOyB9XG5cbi52bW9kYWwuaGlkZSAudm1vZGFsX19vdmVybGF5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTsgfVxuXG4udm1vZGFsX193aW5kb3csIC52bW9kYWxfX292ZXJsYXkge1xuICBvcGFjaXR5OiAwO1xuICB6LWluZGV4OiAtMTsgfVxuXG4udm1vZGFsX19vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UtaW47IH1cblxuLnZtb2RhbF9fd2luZG93IHtcbiAgd2lkdGg6IDk1JTtcbiAgbWFyZ2luOiAwIGF1dG8gMS43NXJlbTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMHB4KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycyBlYXNlLWluOyB9XG4gIC52bW9kYWxfX3dpbmRvdyAuZy1idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHggNDVweDsgfVxuICAudm1vZGFsX193aW5kb3cgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC52bW9kYWxfX3dpbmRvdyBsYWJlbDpob3ZlciB7XG4gICAgICBjb2xvcjogI2JiYjsgfVxuICAgIC52bW9kYWxfX3dpbmRvdyBsYWJlbCAuZmlsdGVyX19jaGVja2JveCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gICAgICBmbGV4LXNocmluazogMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICB3aWR0aDogMTRweDtcbiAgICAgIGhlaWdodDogMTRweDsgfVxuICAgICAgLnZtb2RhbF9fd2luZG93IGxhYmVsIC5maWx0ZXJfX2NoZWNrYm94OmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIGhlaWdodDogNTAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4OyB9XG4gICAgLnZtb2RhbF9fd2luZG93IGxhYmVsIGlucHV0W3R5cGU9J2NoZWNrYm94J10sXG4gICAgLnZtb2RhbF9fd2luZG93IGxhYmVsIGlucHV0W3R5cGU9J3JhZGlvJ10ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgLnZtb2RhbF9fd2luZG93IGxhYmVsIGlucHV0W3R5cGU9J2NoZWNrYm94J106Y2hlY2tlZCB+IC5maWx0ZXJfX2NoZWNrYm94OmFmdGVyLFxuICAgICAgLnZtb2RhbF9fd2luZG93IGxhYmVsIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCB+IC5maWx0ZXJfX2NoZWNrYm94OmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2JiYjsgfVxuXG4udm1vZGFsX19oZWFkZXIge1xuICBkaXNwbGF5OiBub25lO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4udm1vZGFsX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LWZhbWlseTogXCJDaXJjZVwiO1xuICBjb2xvcjogI2JiYjsgfVxuXG4udm1vZGFsX19jbG9zZSB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi52bW9kYWxfX2JvZHkgcCB7XG4gIG1hcmdpbjogMCAwIDVweDsgfVxuXG4udm1vZGFsX19mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXg7XG4gIGRpc3BsYXk6IC1vLWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnZtb2RhbF9fbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAvKnRleHQtYWxpZ246IHJpZ2h0OyovXG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogI2NjYztcbiAgYm94LXNoYWRvdzogbm9uZTsgfVxuXG4uaGVybyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9jb250ZW50L2hlcm9fX2JnLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgbWluLWhlaWdodDogOTAwcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IDUwcHg7XG4gIHBhZGRpbmctdG9wOiA1MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAuaGVybyB7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEyNiU7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA2NSUgMzElO1xuICAgICAgcGFkZGluZy10b3A6IDEwcHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5oZXJvIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDgwMHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcbiAgICAuaGVybyB7XG4gICAgICBtaW4taGVpZ2h0OiA3NTBweDsgfSB9XG4gIC5oZXJvOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC04MHB4O1xuICAgIHJpZ2h0OiAzODBweDtcbiAgICB3aWR0aDogNjZweDtcbiAgICBoZWlnaHQ6IDY2cHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvaGVyb19fZWwtMS5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgICAuaGVybzo6YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5oZXJvOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNDVweDtcbiAgICByaWdodDogNTYwcHg7XG4gICAgd2lkdGg6IDE2OXB4O1xuICAgIGhlaWdodDogMTY5cHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvaGVyb19fZWwtMi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgICAuaGVybzo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmhlcm9fX2ZpZyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2NvbnRlbnQvaGVyby1maWcucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA3JSAxMDAlO1xuICAgIGJvdHRvbTogLTEwMHB4OyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAgIC5oZXJvX19maWcge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvY29udGVudC9oZXJvLWZpZy0yLnBuZ1wiKTtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQlIDEwMCU7XG4gICAgICAgIGJvdHRvbTogMDsgfSB9XG4gIC5oZXJvX19ibG9jayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmhlcm9fX2Jsb2NrIGgxIHtcbiAgICAgIG1heC13aWR0aDogNzUwcHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gIC5oZXJvX19pbnB1dHMge1xuICAgIG1heC13aWR0aDogODUwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWFyZ2luLWJvdHRvbTogMTAwcHg7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAgICAgLmhlcm9fX2lucHV0cyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEyMHB4OyB9XG4gICAgICAgIC5oZXJvX19pbnB1dHMgaW5wdXQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE0cHg7IH0gfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcbiAgICAgIC5oZXJvX19pbnB1dHMgaW5wdXQge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gICAgLmhlcm9fX2lucHV0cyAuYnV0dG9uIHtcbiAgICAgIHdpZHRoOiAyNjZweDtcbiAgICAgIGhlaWdodDogNjVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDU1cHg7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XG4gICAgICAgIC5oZXJvX19pbnB1dHMgLmJ1dHRvbiB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiA1M3B4OyB9IH1cbiAgLmhlcm9fX2luZm8ge1xuICAgIG1heC13aWR0aDogNTAwcHg7IH1cbiAgICAuaGVyb19faW5mbyBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIGNvbG9yOiAjMzUzNTM1O1xuICAgICAgdGV4dC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm9fX2luZm8gcCB7XG4gICAgICAgICAgZm9udC1zaXplOiAyMnB4OyB9IH1cbiAgICAgIC5oZXJvX19pbmZvIHAgc3BhbiB7XG4gICAgICAgIGNvbG9yOiAjRkJBRTAwOyB9XG4gICAgLmhlcm9fX2luZm8gaDMge1xuICAgICAgZm9udC1zaXplOiAzOHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICAgIHRleHQtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICAgICAgY29sb3I6ICMzNTM1MzU7IH1cbiIsIkBpbXBvcnQgXCIuL3Njc3MvZnVuY3Rpb25zXCI7XG5cbiR0aGVtZUNvbG9yOiAjMDA3YWZmICFkZWZhdWx0O1xuJGNvbG9yczogKCd3aGl0ZSc6ICNmZmZmZmYsICdibGFjayc6ICMwMDAwMDApICFkZWZhdWx0O1xuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdzd2lwZXItaWNvbnMnO1xuICBzcmM6IHVybChcImRhdGE6YXBwbGljYXRpb24vZm9udC13b2ZmO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCBkMDlHUmdBQkFBQUFBQVpnQUJBQUFBQUFEQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkdSbFJOQUFBR1JBQUFBQm9BQUFBY2k2cUhrVWRFUlVZQUFBV2dBQUFBSXdBQUFDUUFZQUJYUjFCUFV3QUFCaFFBQUFBdUFBQUFOdUFZNyt4SFUxVkNBQUFGeEFBQUFGQUFBQUJtMmZQY3pVOVRMeklBQUFIY0FBQUFTZ0FBQUdCUDlWNVJZMjFoY0FBQUFrUUFBQUNJQUFBQll0NkYwY0JqZG5RZ0FBQUN6QUFBQUFRQUFBQUVBQkVCUkdkaGMzQUFBQVdZQUFBQUNBQUFBQWovL3dBRFoyeDVaZ0FBQXl3QUFBRE1BQUFEMk1IdHJ5Vm9aV0ZrQUFBQmJBQUFBREFBQUFBMkUyK2VvV2hvWldFQUFBR2NBQUFBSHdBQUFDUUM5Z0R6YUcxMGVBQUFBaWdBQUFBWkFBQUFyZ0prQUJGc2IyTmhBQUFDMEFBQUFGb0FBQUJhRlFBVUdHMWhlSEFBQUFHOEFBQUFId0FBQUNBQWNBQkFibUZ0WlFBQUEvZ0FBQUU1QUFBQ1h2RmRCd2x3YjNOMEFBQUZOQUFBQUdJQUFBQ0U1czc0aFhqYVkyQmtZR0FBWXBmNUh1L2orVzIrTW5Bek1ZREF6YVg2UWpENi80Ly9CeGo1R0E4QXVSd01ZR2tBUHl3TDEzamFZMkJrWUdBODhQOEFneDRqKy84ZlFEWWZBMUFFQldnREFJQjJCT29BZU5wallHUmdZTkJoNEdkZ1lnQUJFTW5JQUJKellOQURDUUFBQ1dnQXNRQjQybU5nWWZ6Q09JR0JsWUdCMFljeGpZR0J3UjFLZjJXUVpHaGhZR0JpWUdWbWdBRkdCaVFRa09hYXd0REFvTUJReFhqZy93RUdQY1lEREE0d05VQTJDQ2d3c0FBQU80RUw2Z0FBZU5wajJNMGd5QUFDcXhnR05XQmtaMkQ0L3dNQSt4a0RkZ0FBQUhqYVkyQmdZR2FBWUJrR1JnWVFpQUh5R01GOEZnWUhJTTNEd01IQUJHUXJNT2d5V0RMRU0xVDkvdzhVQmZFTWdMekUvLy8vUC81Ly9mL1YveHYrcjRlYUFBZU1iQXh3SVVZbUlNSEVnS1lBWWpVY3NEQXdzTEt4YzNCeWNmUHc4akVRQS9nWkJBU0ZoRVZFeGNRbEpLV2taV1RsNUJVVWxaUlZWTlhVTlRRWkJnTUFBTVIrRStnQUVRRkVBQUFBS2dBcUFDb0FOQUErQUVnQVVnQmNBR1lBY0FCNkFJUUFqZ0NZQUtJQXJBQzJBTUFBeWdEVUFONEE2QUR5QVB3QkJnRVFBUm9CSkFFdUFUZ0JRZ0ZNQVZZQllBRnFBWFFCZmdHSUFaSUJuQUdtQWJJQnpnSHNBQUI0MnUyTk1RNkNVQXlHVzU2OHg5QW5lWVlnbTRNSmJoS0ZhRXhJT0FWWDhBcGV3U3Q0QmljNEFmZUFpZDNWT0JpeER4ZlBZRXphNU8rWGZpMDRZQURnZ2lVSVVMQ3VFSks4VmhPNGJTdnBkbmt0SEk1UUNZdGRpMnNsOFpuWGFIbHFVck5LemRLY1Q4Y2pscStyd1pTdklWY3pOaWV6c2ZuUC91em5tZlBGQk5PRE0ySzdNVFE0NVlFQVpxR1A4MUFtR0djRjNpUHFPb3AwcjFTUFRhVGJWa2ZVZTRIWGo5N3dZRSt5TndXWXh3V3U0djF1Z1dIZ28zUzFYZFpFVnFXTTdFVDBjZm5MR3hXZmtnUjQybzJQdldyRE1CU0ZqL0lITGFGMHpLalJnZGlWTXdTY05SQW9XVW9INzhZMmljQi95SVkwOUFuNkFIMkJkdS9VQit5eG9wWXNoUWlFdm52dTBkVVJnRHQ4UWVDOFBEdzdGcGppM2ZFQTR6L1BFSjZZT0I1aEtoNGRqM0V2WGh4UHFIL1NLVVkzcko3c3JaNEZabmgxUE1BdFBod1A2ZmwyUE1KTVBEZ2VRNHJZOFlUNkd6YW8wZUFFQTQwOUR1Z2dtVG5Gbk9jU0NpRWlMTWd4Q2lUSTZDcTVEWlVkM1FtcDEwdk8wTGFMVGQyY2pONGZPdW1sYzdsVVliU1FjWkZrdXRSRzdnNkpLWkt5MFJtZExZNjgwQ0RuRUorVU1rcEZGZTFSTjdueGRWcFhyQzRhVHRuYXVyT25ZZXJjWmcyWVZtTE4vZC9nY3pmRWltckUvZnMvYk91cTI5Wm1uOHRsb09SYVhnWmdHYTc4eU85L2NuWG0yQnBhR3ZxMjVEdjlTNEU5KzVTSWM5UHF1cEpLaFlGU1NsNDcrUWNyMW1ZTkFBQUFlTnB0dzBjS3drQUFBTURaSkE4UTdPVUp2a0xzUGZaNnpGVkVSUHk4cUhoMllFUiszaS9CUDgzdklCTEx5U3NvS2ltcnFLcXBhMmhwNitqcTZSc1lHaG1ibUpxWlN5MHNyYXh0Yk8zc0hSeWRuRU1VNHVSNnl4N0pKWHZlUDdXckR5Y0FBQUFBQUFILy93QUNlTnBqWUdSZ1lPQUJZaGtnWmdKQ1pnWk5Ca1lHTFFadElKc0ZMTVlBQUF3M0FMZ0FlTm9saXpFS2dEQVFCQ2NoUmJDMnNGRVIwWUQ2cVZRaUJDdi9IOWV6R0k2WjVYQkF3OENCSy9tNWlRUVZhdVZiWExuT3JNWnYyb0xkS0ZhOFBqdXJ1MmhKekdhYm1PU0x6Tk16dnV0cEIzTjQybU5nWkdCZzRHS1FZekJoWU14SkxNbGo0R0JnQVlvdy9QL1BBSkpoTE02c1NvV0tmV0NBQXdEQWpnYlJBQUI0Mm1OZ1lHQmtBSUliQ1pvNUlQcm1VbjBoR0EwQU84RUZUUUFBXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9jb3JlL2NvcmVcIjtcblxuLy9JTVBPUlRfQ09NUE9ORU5UU1xuIiwiOnJvb3Qge1xuICAtLXN3aXBlci10aGVtZS1jb2xvcjogI3skdGhlbWVDb2xvcn07XG59XG4uc3dpcGVyLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgLyogRml4IG9mIFdlYmtpdCBmbGlja2VyaW5nICovXG4gIHotaW5kZXg6MTtcbn1cbi5zd2lwZXItY29udGFpbmVyLXZlcnRpY2FsID4gLnN3aXBlci13cmFwcGVyIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5zd2lwZXItd3JhcHBlciB7XG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OnRyYW5zZm9ybTtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG4uc3dpcGVyLWNvbnRhaW5lci1hbmRyb2lkIC5zd2lwZXItc2xpZGUsXG4uc3dpcGVyLXdyYXBwZXIge1xuICB0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMHB4LDAsMCk7XG59XG4uc3dpcGVyLWNvbnRhaW5lci1tdWx0aXJvdyA+IC5zd2lwZXItd3JhcHBlciB7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5zd2lwZXItY29udGFpbmVyLW11bHRpcm93LWNvbHVtbiA+IC5zd2lwZXItd3JhcHBlciB7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5zd2lwZXItY29udGFpbmVyLWZyZWUtbW9kZSA+IC5zd2lwZXItd3JhcHBlciB7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uc3dpcGVyLXNsaWRlIHtcbiAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xufVxuLnN3aXBlci1zbGlkZS1pbnZpc2libGUtYmxhbmsge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG4vKiBBdXRvIEhlaWdodCAqL1xuLnN3aXBlci1jb250YWluZXItYXV0b2hlaWdodCB7XG4gICYsIC5zd2lwZXItc2xpZGUge1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuXG4gIC5zd2lwZXItd3JhcHBlciB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBoZWlnaHQ7XG4gIH1cbn1cblxuLyogM0QgRWZmZWN0cyAqL1xuLnN3aXBlci1jb250YWluZXItM2Qge1xuICBwZXJzcGVjdGl2ZTogMTIwMHB4O1xuICAuc3dpcGVyLXdyYXBwZXIsIC5zd2lwZXItc2xpZGUsIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQsIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LCAuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AsIC5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbSwgLnN3aXBlci1jdWJlLXNoYWRvdyB7XG4gICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgfVxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgei1pbmRleDogMTA7XG4gIH1cbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsIHJnYmEoMCwwLDAsMC41KSwgcmdiYSgwLDAsMCwwKSk7XG4gIH1cbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgwLDAsMCwwLjUpLCByZ2JhKDAsMCwwLDApKTtcbiAgfVxuICAuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3Age1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoMCwwLDAsMC41KSwgcmdiYSgwLDAsMCwwKSk7XG4gIH1cbiAgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLDAuNSksIHJnYmEoMCwwLDAsMCkpO1xuICB9XG59XG5cbi8qIENTUyBNb2RlICovXG4uc3dpcGVyLWNvbnRhaW5lci1jc3MtbW9kZSB7XG4gID4gLnN3aXBlci13cmFwcGVyIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7IC8qIEZvciBGaXJlZm94ICovXG4gICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAvKiBGb3IgSW50ZXJuZXQgRXhwbG9yZXIgYW5kIEVkZ2UgKi9cbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuICA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGUge1xuICAgIHNjcm9sbC1zbmFwLWFsaWduOiBzdGFydCBzdGFydDtcbiAgfVxufVxuLnN3aXBlci1jb250YWluZXItaG9yaXpvbnRhbC5zd2lwZXItY29udGFpbmVyLWNzcy1tb2RlIHtcbiAgPiAuc3dpcGVyLXdyYXBwZXIge1xuICAgIHNjcm9sbC1zbmFwLXR5cGU6IHggbWFuZGF0b3J5O1xuICB9XG59XG4uc3dpcGVyLWNvbnRhaW5lci12ZXJ0aWNhbC5zd2lwZXItY29udGFpbmVyLWNzcy1tb2RlIHtcbiAgPiAuc3dpcGVyLXdyYXBwZXIge1xuICAgIHNjcm9sbC1zbmFwLXR5cGU6IHkgbWFuZGF0b3J5O1xuICB9XG59XG4iLCJAbWl4aW4gZm9udC1mYWNlKCRmb250LW5hbWUsICRwYXRoLCAkd2VpZ2h0OiBub3JtYWwsICRzdHlsZTogbm9ybWFsKSB7XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBxdW90ZSgkZm9udC1uYW1lKTtcbiAgICBzcmM6XG4gICAgICB1cmwoI3skcGF0aH0ud29mZikgZm9ybWF0KFwid29mZlwiKSxcbiAgICAgIC8vIHVybCgjeyRwYXRofS53b2ZmMikgZm9ybWF0KFwid29mZjJcIiksXG4gICAgICB1cmwoI3skcGF0aH0udHRmKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgICBmb250LXdlaWdodDogJHdlaWdodDtcbiAgICBmb250LXN0eWxlOiAkc3R5bGU7XG4gIH1cbn1cbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgnaW52b2ljZScsICcuLi9mb250cy9pbnZvaWNlL2ludm9pY2UnKTtcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgnSGVsdmV0aWNhQm9sZCcsICcuLi9mb250cy9oZWx2ZXRpY2EvSGVsdmV0aWNhQm9sZC9IZWx2ZXRpY2FCb2xkJywgJ25vcm1hbCcsICdub3JtYWwnKTtcblxuQGluY2x1ZGUgZm9udC1mYWNlKCdDaXJjZScsICcuLi9mb250cy9DaXJjZS9DaXJjZS1SZWd1bGFyJywgNDAwLCAnbm9ybWFsJyk7XG5AaW5jbHVkZSBmb250LWZhY2UoJ0NpcmNlJywgJy4uL2ZvbnRzL0NpcmNlL0NpcmNlLUJvbGQnLCA3MDAsICdub3JtYWwnKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgnQ2lyY2UnLCAnLi4vZm9udHMvQ2lyY2UvQ2lyY2UtRXh0cmFCb2xkJywgODAwLCAnbm9ybWFsJyk7IiwiQGltcG9ydCBcInV0aWxzL2xpYnNcIjtcbkBpbXBvcnQgXCJ1dGlscy92YXJzXCI7XG5AaW1wb3J0IFwidXRpbHMvbWl4aW5zXCI7XG5AaW1wb3J0IFwidXRpbHMvZm9udHNcIjtcbkBpbXBvcnQgXCJ1dGlscy9zcHJpdGVcIjtcbi8vIEBpbmNsdWRlIHNwcml0ZXMoJHNwcml0ZXNoZWV0LXNwcml0ZXMpO1xuXG5odG1sIHtcblx0Zm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG5cdGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG5cdGhlaWdodDogMTAwJTtcblx0c2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG5cdHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xuXHRsaW5lLWhlaWdodDogMS4yO1xuXHRjb2xvcjogJGJsYWNrO1xuXHRmb250LWZhbWlseTogJG1haW5Gb250LCBzYW5zLXNlcmlmO1xuXG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxudWwsXG5vbCB7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdHBhZGRpbmc6IDA7XG59XG5cbmEge1xuXHRjb2xvcjogJGJsYWNrO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdCY6aG92ZXIge1xuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXHR9XG59XG5cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxudWwsXG5vbCxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHsgbWFyZ2luOiAwOyB9XG5cbmE6bm90KFtjbGFzc10pIHsgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvOyB9XG5cbmltZyB7XG5cdC8vIG1heC13aWR0aDogMTAwJTtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEsXG5zZWxlY3QgeyBmb250OiBpbmhlcml0OyB9XG5idXR0b24geyBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7fVxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyxcbnRleHRhcmVhIHsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG50ZXh0YXJlYSB7IHJlc2l6ZTogbm9uZTsgfVxuXG5zZWN0aW9uIHsgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbmlucHV0LFxuc2VsZWN0LFxuYnV0dG9uIHsgb3V0bGluZTogbm9uZTsgfVxuXG5cblxuLndyYXBwZXIge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvaGVyb19fZmlnLnBuZycpO1xuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDtcblx0YmFja2dyb3VuZC1zaXplOiA0MCU7XG5cdC8vIG92ZXJmbG93LXg6IGhpZGRlbjtcblx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAxNDAwcHgpIHtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDUwJTtcblx0ICB9XG5cdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGxhcmdlKSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogbm9uZTtcblx0ICB9XG59XG5cbi5jb250ZW50IHsgXG5cdGZsZXg6IDEgMCBhdXRvO1xufVxuXG4uY29udGFpbmVyIHtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDAgMTVweDtcblx0bWF4LXdpZHRoOiAkY29udGVudDtcblx0d2lkdGg6IDEwMCU7XG5cdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGRlc2t0b3ApIHtcblx0XHRtYXgtd2lkdGg6IDk3MHB4O1xuXHQgIH1cblx0ICBAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xuXHRcdG1heC13aWR0aDogNzUwcHg7XG5cdCAgfVxuXHQgIEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJHRhYmxldCkge1xuXHRcdG1heC13aWR0aDogbm9uZTtcblx0ICB9XG5cdCAgfVxuXG4udGl0bGUtMXtcblx0Zm9udC1zaXplOiA1OHB4O1xuXHRmb250LXdlaWdodDogNzAwO1xuXHRjb2xvcjogJGJsYWNrMjtcblx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkZGVza3RvcCkge1xuXHRcdGZvbnQtc2l6ZTogNTBweDtcblx0ICB9XG5cdCAgQG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbGFyZ2UpIHtcblx0XHRmb250LXNpemU6IDQwcHg7XG5cdCAgfVxuXHQgIEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJHRhYmxldCkge1xuXHRcdGZvbnQtc2l6ZTogMzJweDtcblx0ICB9XG5cdHNwYW57XG5cdFx0Zm9udC1zaXplOiA1OHB4O1xuXHRcdGZvbnQtd2VpZ2h0OiA4MDA7XG5cdFx0Y29sb3I6ICRhY2NlbnQ7XG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkZGVza3RvcCkge1xuXHRcdFx0Zm9udC1zaXplOiA1MHB4O1xuXHRcdCAgfVxuXHRcdCAgQG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbGFyZ2UpIHtcblx0XHRcdGZvbnQtc2l6ZTogNDBweDtcblx0XHQgIH1cblx0XHQgIEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJHRhYmxldCkge1xuXHRcdFx0Zm9udC1zaXplOiAzMnB4O1xuXHRcdCAgfVxuXHR9XG59XG5cbi5idXR0b257XG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCAjMzRBN0ZGIDAlLCAjMDNEMEZGIDEwMCUpO1xuXHRib3JkZXItcmFkaXVzOiAyNXB4O1xuXHR0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG5cdHBhZGRpbmc6IDEzcHggMjNweDtcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRjb2xvcjogJHdoaXRlO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdCY6aG92ZXJ7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdHRyYW5zaXRpb246IGFsbCBlYXNlIC4ycztcblx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgIzM0QTdGRiAwJSwgIzA1YjRkYiAxMDAlKTtcblx0fVxuXHQuc3ZnLXNwcml0ZS1pY29ue1xuXHRcdGZpbGw6ICR3aGl0ZTtcblx0XHR3aWR0aDogMTRweDtcblx0XHRoZWlnaHQ6IDE0cHg7XG5cdFx0bWFyZ2luLXJpZ2h0OiAxNHB4O1xuXHR9XG5cdHNwYW57XG5cdFx0Y29sb3I6ICR3aGl0ZTtcblx0XHRmb250LXNpemU6IDE0cHg7XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0fVxufVxuXG4uaW1ne1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWF4LXdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IGF1dG87XG59XG5cbi5nLWxpbmt7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dHJhbnNpdGlvbjogYWxsIGVhc2UgLjJzO1xuXHQmOmhvdmVye1xuXHRcdGNvbG9yOiAkYWNjZW50Mjtcblx0XHR0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdCY6OmJlZm9yZXtcblx0XHRcdHRyYW5zZm9ybTogc2NhbGUoMSk7XG5cdFx0fVxuXHR9XG5cdCY6OmJlZm9yZXtcblx0XHRjb250ZW50OiAnJztcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiAycHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDI7XG5cdFx0bGVmdDogMDtcblx0XHRib3R0b206IC0ycHg7XG5cdFx0dHJhbnNmb3JtOiBzY2FsZSgwKTtcblx0XHR0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnNcblx0fVxufVxuXG4uZy1pbnB1dHtcblx0Ym9yZGVyOiAxcHggc29saWQgI0M1QzVDNTtcblx0Ym9yZGVyLXJhZGl1czogNTVweDtcblx0Zm9udC1zaXplOiAxOHB4O1xuXHRjb2xvcjogJGdyYXk7XG5cdGZvbnQtd2VpZ2h0OiA4MDA7XG5cdHBhZGRpbmc6IDIxcHggMHB4IDIxcHggMjhweDtcblx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbW9iaWxlKSB7XG5cdFx0Zm9udC1zaXplOiAxNnB4O1xuXHRcdHBhZGRpbmc6IDE2cHggMHB4IDE2cHggMjhweDtcblx0ICB9XG59XG5idXR0b257XG5cdGJvcmRlcjogbm9uZTtcbn1cblxuQGltcG9ydCBcIm1vZHVsZXMvbW9kdWxlc1wiO1xuIiwiLy8gQ29sb3JzXG4kd2hpdGU6ICNmZmY7XG4kYmxhY2s6ICMwMDA7XG4kYmxhY2syOiAjMzUzNTM1O1xuJG1haW5Db2xvcjogI2NjYztcbiRhY2NlbnRDb2xvcjogI2JiYjtcbiRhY2NlbnQ6ICMzNEE3RkY7XG4kYWNjZW50MjogI0ZCQUUwMDtcbiRncmF5OiAjNzI3MjcyO1xuXG4vLyBTaXplc1xuJGJhc2UtZm9udC1zaXplOiAxNnB4O1xuXG4kbW9iaWxlOiA1NzdweDtcbiR0YWJsZXQ6IDc2OHB4O1xuJGxhcmdlOiA5OTJweDtcbiRkZXNrdG9wOiAxMTk5cHg7XG5cbiRjb250ZW50OiAxMzIwcHg7XG5cbi8vIEZvbnRzXG4kbWFpbkZvbnQ6ICdDaXJjZSciLCIuaGVhZGVye1xyXG5cdC8vIHBvc2l0aW9uOiBmaXhlZDtcclxuXHQvLyB3aWR0aDogMTAwJTtcclxuXHQvLyB0b3A6IDA7XHJcblx0Ly8gbGVmdDogMDtcclxuXHQvLyB6LWluZGV4OiA1MDtcclxuXHQmX19yb3d7XHJcblx0XHRwYWRkaW5nOiA3MHB4IDAgMjEwcHggMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRkZXNrdG9wKSB7XHJcblx0XHRcdHBhZGRpbmc6IDcwcHggMCA5MHB4IDA7XHJcblx0XHQgIH1cclxuXHR9XHJcblx0Jl9fbG9nb3tcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRtaW4taGVpZ2h0OiAxMDBweDtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0XHRtaW4taGVpZ2h0OiA1MHB4O1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0ICB9XHJcblx0fVxyXG5cdCZfX3JpZ2h0e1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0fVxyXG5cdCZfX3JpZ2h0LXRvcHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMzBweDtcclxuXHRcdGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdFx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuXHRcdCAgfVxyXG5cdH1cclxuXHQmX19yaWdodC1pbmZve1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRtYXJnaW4tcmlnaHQ6IDcwcHg7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdFx0XHRtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG5cdFx0ICB9XHJcblx0XHRzcGFue1xyXG5cdFx0XHRmb250LXNpemU6IDEwcHg7XHJcblx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcclxuXHRcdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHR9XHJcblx0XHRhe1xyXG5cdFx0XHRmb250LXNpemU6IDE4cHg7XHJcblx0XHRcdGZvbnQtd2VpZ2h0OiA4MDA7XHJcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHR9XHJcblx0fVxyXG5cdCZfX3JpZ2h0LWJvdHRvbXtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGxhcmdlKSB7XHJcblx0XHRcdG9yZGVyOiAtMTtcclxuXHRcdCAgfVxyXG5cdH1cclxuXHQuaGVhZGVyX19idXJnZXJ7XHJcblx0XHRkaXNwbGF5OiBub25lO1xyXG5cdH1cclxuXHQuaGVhZGVyX19tbnV7XHJcblx0XHRmbGV4OiAxIDEgNzAlO1xyXG5cdFx0ei1pbmRleDogMjtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdC5oZWFkZXJfX2xpc3R7XHJcblx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdFx0bGl7XHJcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHRcdG1hcmdpbi1yaWdodDogNTBweDtcclxuXHRcdFx0XHQmOmxhc3QtY2hpbGR7XHJcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdCY6aG92ZXJ7XHJcblx0XHRcdFx0XHQuaGVhZGVyX19saW5re1xyXG5cdFx0XHRcdFx0XHRjb2xvcjogJGFjY2VudDI7XHJcblx0XHRcdFx0XHRcdHRyYW5zaXRpb246IGFsbCBlYXNlIC4ycztcclxuXHRcdFx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0c3Ryb25ne1xyXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50MjtcclxuXHRcdFx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIGVhc2UgLjJzO1xyXG5cdFx0XHRcdFx0XHQmOjpiZWZvcmV7XHJcblx0XHRcdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDI7XHJcblx0XHRcdFx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIGVhc2UgLjJzO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdCY6OmFmdGVye1xyXG5cdFx0XHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQyO1xyXG5cdFx0XHRcdFx0XHRcdHRyYW5zaXRpb246IGFsbCBlYXNlIC4ycztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRzdHJvbmd7XHJcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0XHRib3R0b206IC0xNXB4O1xyXG5cdFx0XHRcdFx0bGVmdDogMDtcclxuXHRcdFx0XHRcdHdpZHRoOiA2cHg7XHJcblx0XHRcdFx0XHRoZWlnaHQ6IDZweDtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IDUwJTtcclxuXHRcdFx0XHRcdHRyYW5zaXRpb246IGFsbCBlYXNlIC4ycztcclxuXHRcdFx0XHRcdCY6YmVmb3Jle1xyXG5cdFx0XHRcdFx0XHRjb250ZW50OiAnJztcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRcdFx0XHRib3R0b206IDBweDtcclxuXHRcdFx0XHRcdFx0bGVmdDogMTBweDtcclxuXHRcdFx0XHRcdFx0d2lkdGg6IDZweDtcclxuXHRcdFx0XHRcdFx0aGVpZ2h0OiA2cHg7XHJcblx0XHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuXHRcdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdFx0XHRcdFx0XHR0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQmOmFmdGVye1xyXG5cdFx0XHRcdFx0XHRjb250ZW50OiAnJztcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRcdFx0XHRib3R0b206IDBweDtcclxuXHRcdFx0XHRcdFx0bGVmdDogMjBweDtcclxuXHRcdFx0XHRcdFx0d2lkdGg6IDZweDtcclxuXHRcdFx0XHRcdFx0aGVpZ2h0OiA2cHg7XHJcblx0XHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuXHRcdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdFx0XHRcdFx0XHR0cmFuc2l0aW9uOiBhbGwgZWFzZSAuMnM7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC5oZWFkZXJfX2xpbmt7XHJcblx0XHRcdFx0XHRmb250LXNpemU6IDE2cHg7XHJcblx0XHRcdFx0XHRmb250LXdlaWdodDogNzAwO1xyXG5cdFx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIGVhc2UgLjJzO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcclxuXHRib2R5LmxvY2t7XHJcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdH1cclxuXHQuaGVhZGVye1xyXG5cdFx0JjpiZWZvcmV7XHJcblx0XHRcdHotaW5kZXg6IDM7XHJcblx0XHR9XHJcblx0XHQuaGVhZGVyX19yb3d7XHJcblx0XHRcdC8vIGhlaWdodDogNTBweDtcclxuXHRcdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdFx0cGFkZGluZzogMjVweCAwO1xyXG5cdFx0XHQuaGVhZGVyX19sb2dve1xyXG5cdFx0XHR9XHJcblx0XHRcdC5oZWFkZXJfX2J1cmdlcntcclxuXHRcdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHRcdFx0d2lkdGg6IDQycHg7XHJcblx0XHRcdFx0aGVpZ2h0OiA0MnB4O1xyXG5cdFx0XHRcdHotaW5kZXg6IDM7XHJcblx0XHRcdFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsICMzNEE3RkYgMCUsICMwM0QwRkYgMTAwJSk7XHJcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogMjVweDtcclxuXHRcdFx0XHQmOmJlZm9yZSwgJjphZnRlcntcclxuXHRcdFx0XHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0XHRcdHdpZHRoOiA2MCU7XHJcblx0XHRcdFx0XHRoZWlnaHQ6IDNweDtcclxuXHRcdFx0XHRcdGxlZnQ6IDhweDtcclxuXHRcdFx0XHRcdHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHMgO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRcdHRvcDogMTRweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JjphZnRlcntcclxuXHRcdFx0XHRcdGJvdHRvbTogMTNweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0c3BhbntcclxuXHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblx0XHRcdFx0XHRsZWZ0OiA4cHg7XHJcblx0XHRcdFx0XHR3aWR0aDogNjAlO1xyXG5cdFx0XHRcdFx0aGVpZ2h0OiAzcHg7XHJcblx0XHRcdFx0XHR0b3A6IDIwcHg7XHJcblx0XHRcdFx0XHR0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzIDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0LmhlYWRlcl9fYnVyZ2VyLmFjdGl2ZXtcclxuXHRcdFx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuXHRcdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuXHRcdFx0XHRcdHRvcDogMjBweDtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRtYWluQ29sb3I7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdCY6YWZ0ZXJ7XHJcblx0XHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG5cdFx0XHRcdFx0Ym90dG9tOiAxOXB4O1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJG1haW5Db2xvcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0c3BhbntcclxuXHRcdFx0XHRcdHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdC5oZWFkZXJfX3JpZ2h0e1xyXG5cdFx0XHRcdHBvc2l0aW9uOiBmaXhlZDtcclxuXHRcdFx0XHR0b3A6IC0xMDAlO1xyXG5cdFx0XHRcdGxlZnQ6IDA7XHJcblx0XHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICNGNEY0RjQ7XHJcblx0XHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0XHQvLyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdFx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuXHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcyA7XHJcblx0XHRcdFx0b3ZlcmZsb3c6IGF1dG87XHJcblx0XHRcdFx0cGFkZGluZzogMCA0MHB4O1xyXG5cdFx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdH1cclxuXHRcdFx0LmhlYWRlcl9fbW51e1xyXG5cdFx0XHRcdC5oZWFkZXJfX2xpc3R7XHJcblx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0XHRcdG1hcmdpbi10b3A6IDcwcHg7XHJcblx0XHRcdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdFx0XHRcdFx0bWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHRcdFx0XHRcdGxpe1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRcdHN0cm9uZ3tcclxuXHRcdFx0XHRcdFx0XHRkaXNwbGF5OiBub25lO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdC5oZWFkZXJfX21udS5hY3RpdmV7XHJcblx0XHRcdFx0dG9wOiAwO1xyXG5cdFx0XHR9XHJcblx0XHRcdC5oZWFkZXJfX3JpZ2h0LmFjdGl2ZXtcclxuXHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbiAgfVxyXG5cclxuLm1vZGFsX19mb3Jte1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtYmctMS5qcGcnKTtcclxuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbSByaWdodDtcclxuXHRtaW4taGVpZ2h0OiA2NzBweDtcclxuXHRoZWlnaHQ6IDEwMHZoO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQvLyBAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICR0YWJsZXQpIHtcclxuXHQvLyBcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuXHQvLyAgIH1cclxuXHQmOjpiZWZvcmV7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHRvcDogMDtcclxuXHRcdGxlZnQ6IDkwcHg7XHJcblx0XHR3aWR0aDogNjZweDtcclxuXHRcdGhlaWdodDogNDJweDtcclxuXHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtZWwtMS5wbmcnKTtcclxuXHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICR0YWJsZXQpIHtcclxuXHRcdFx0YmFja2dyb3VuZC1zaXplOiA1MCU7XHJcblx0XHQgIH1cclxuXHR9XHJcblx0Jjo6YWZ0ZXJ7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGJvdHRvbTogOTBweDtcclxuXHRcdGxlZnQ6IDBweDtcclxuXHRcdHdpZHRoOiAxMTNweDtcclxuXHRcdGhlaWdodDogMjY3cHg7XHJcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9jb250ZW50L21vZGFsLWVsLTIucG5nJyk7XHJcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkdGFibGV0KSB7XHJcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogNTAlO1xyXG5cdFx0ICB9XHJcblx0fVxyXG5cdC5mb3JtX19ibG9ja3tcclxuXHRcdHBhZGRpbmctdG9wOiAxMjBweDtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdHotaW5kZXg6IDE7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0XHRwYWRkaW5nOiAxMjBweCAyMHB4IDAgMjBweDtcclxuXHRcdCAgfVxyXG5cdFx0ICBAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRtb2JpbGUpIHtcclxuXHRcdFx0cGFkZGluZzogNjBweCAyMHB4IDAgMjBweDtcclxuXHRcdCAgfVxyXG5cdFx0aDF7XHJcblx0XHRcdG1heC13aWR0aDogODAwcHg7XHJcblx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdFx0bWFyZ2luOiAwcHggYXV0byA0MHB4IGF1dG87XHJcblx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0XHRcdG1hcmdpbjogMHB4IGF1dG8gMjBweCBhdXRvO1xyXG5cdFx0XHQgIH1cclxuXHRcdH1cclxuXHR9XHJcblx0LmZvcm1fX2lucHV0c3tcclxuXHRcdG1heC13aWR0aDogODUwcHg7XHJcblx0XHRtYXJnaW46IDAgYXV0byA1MHB4IGF1dG87XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbGFyZ2UpIHtcclxuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRcdFx0aW5wdXR7XHJcblx0XHRcdFx0bWFyZ2luLWJvdHRvbTogMjBweDtcclxuXHRcdFx0fVxyXG5cdFx0ICB9XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRtb2JpbGUpIHtcclxuXHRcdFx0bWFyZ2luOiAwcHggYXV0byAyMHB4IGF1dG87XHJcblx0XHQgIH1cclxuXHRcdCAgXHJcblx0fVxyXG5cdC5mb3JtX19idG5ze1xyXG5cdFx0bWF4LXdpZHRoOiA4NTBweDtcclxuXHRcdG1hcmdpbjogMCBhdXRvO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0LmJ1dHRvbntcclxuXHRcdFx0Y29sb3I6ICR3aGl0ZTtcclxuXHRcdFx0d2lkdGg6IDI5MnB4O1xyXG5cdFx0XHRoZWlnaHQ6IDY2cHg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0XHRib3JkZXI6IG5vbmU7XHJcblx0XHRcdGJvcmRlci1yYWRpdXM6IDU1cHg7XHJcblx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0XHRcdHdpZHRoOiAyMDBweDtcclxuXHRcdFx0XHRoZWlnaHQ6IDUwcHg7XHJcblx0XHRcdCAgfVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4ubW9kYWxfX2Zvcm0ye1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtYmctMi5qcGcnKTtcclxuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IHRvcCByaWdodDtcclxuXHRtaW4taGVpZ2h0OiA2NzBweDtcclxuXHRoZWlnaHQ6IDEwMHZoO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQvLyBAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICR0YWJsZXQpIHtcclxuXHQvLyBcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuXHQvLyAgIH1cclxuXHQmOjpiZWZvcmV7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHRvcDogMDtcclxuXHRcdGxlZnQ6IDkwcHg7XHJcblx0XHR3aWR0aDogNjZweDtcclxuXHRcdGhlaWdodDogNDJweDtcclxuXHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvbW9kYWwtZWwtMS5wbmcnKTtcclxuXHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICR0YWJsZXQpIHtcclxuXHRcdFx0YmFja2dyb3VuZC1zaXplOiA1MCU7XHJcblx0XHQgIH1cclxuXHR9XHJcblx0Jjo6YWZ0ZXJ7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGJvdHRvbTogOTBweDtcclxuXHRcdGxlZnQ6IDBweDtcclxuXHRcdHdpZHRoOiAxMTNweDtcclxuXHRcdGhlaWdodDogMjY3cHg7XHJcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9jb250ZW50L21vZGFsLWVsLTIucG5nJyk7XHJcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkdGFibGV0KSB7XHJcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogNTAlO1xyXG5cdFx0ICB9XHJcblx0fVxyXG5cdC5mb3JtX19ibG9jazJ7XHJcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR6LWluZGV4OiAxO1xyXG5cdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHQvLyBAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0Ly8gICB9XHJcblx0XHQvLyAgIEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0Ly8gICB9XHJcblx0XHRoMXtcclxuXHRcdFx0bWF4LXdpZHRoOiA4MDBweDtcclxuXHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdFx0XHRtYXJnaW46IDBweCBhdXRvIDQwcHggYXV0bztcclxuXHRcdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcblx0XHRcdFx0bWFyZ2luOiAwcHggYXV0byAyMHB4IGF1dG87XHJcblx0XHRcdCAgfVxyXG5cdFx0fVxyXG5cdH1cclxuXHQuZm9ybV9fYnRuc3tcclxuXHRcdG1heC13aWR0aDogODUwcHg7XHJcblx0XHRtYXJnaW46IDAgYXV0bztcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdC5idXR0b257XHJcblx0XHRcdGNvbG9yOiAkd2hpdGU7XHJcblx0XHRcdHdpZHRoOiAyOTJweDtcclxuXHRcdFx0aGVpZ2h0OiA2NnB4O1xyXG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdFx0Ym9yZGVyLXJhZGl1czogNTVweDtcclxuXHRcdFx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcblx0XHRcdFx0d2lkdGg6IDIwMHB4O1xyXG5cdFx0XHRcdGhlaWdodDogNTBweDtcclxuXHRcdFx0ICB9XHJcblx0XHR9XHJcblx0fVxyXG59IiwiXG5ib2R5LnNob3ctbW9kYWwge1xuXHQvLyBwYWRkaW5nLXJpZ2h0OiAxN3B4O1xuXHQgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAgLy8gLnZtb2RhbCB7fVxuICAudm1vZGFsLm9wZW4gLnZtb2RhbF9fb3ZlcmxheXtcblx0ICB3aWR0aDogMTAwJTtcblx0ICBoZWlnaHQ6IDEwMCU7XG5cdCAgb3ZlcmZsb3cteDogaGlkZGVuO1xuXHQgIG92ZXJmbG93LXk6IGF1dG87XG4gIH1cbiAgLnZtb2RhbC5vcGVuIC52bW9kYWxfX292ZXJsYXksXG4gIC52bW9kYWwub3BlbiAudm1vZGFsX193aW5kb3cge1xuXHQgIG9wYWNpdHk6IDE7XG5cdCAgei1pbmRleDogOTk5O1xuICB9XG4gIC52bW9kYWwuaGlkZSAudm1vZGFsX19vdmVybGF5LFxuICAudm1vZGFsLmhpZGUgLnZtb2RhbF9fd2luZG93IHtcblx0ICBvcGFjaXR5OiAxO1xuXHQgIHotaW5kZXg6IDk5OTtcbiAgfVxuICAudm1vZGFsLm9wZW4gLnZtb2RhbF9fd2luZG93IHtcblx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMS43NXJlbSk7XG4gIH1cbiAgLnZtb2RhbC5vcGVuIC52bW9kYWxfX292ZXJsYXl7XG5cdCAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuOSk7XG4gIH1cbiAgXG4gIC52bW9kYWwuaGlkZSAudm1vZGFsX193aW5kb3cge1xuXHQgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwcHgpO1xuICB9XG4gIFxuICAudm1vZGFsLmhpZGUgLnZtb2RhbF9fb3ZlcmxheSB7XG5cdCAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbiAgfVxuICBcbiAgLnZtb2RhbF9fd2luZG93ICwudm1vZGFsX19vdmVybGF5IHtcblx0ICBvcGFjaXR5OiAwO1xuXHQgIHotaW5kZXg6IC0xO1xuICB9XG4gIFxuICAudm1vZGFsX19vdmVybGF5IHtcblx0ICBwb3NpdGlvbjogZml4ZWQ7XG5cdCAgdG9wOiAwO1xuXHQgIHJpZ2h0OiAwO1xuXHQgIGJvdHRvbTogMDtcblx0ICBsZWZ0OiAwO1xuXHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG5cdCAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZS1pbjtcbiAgfVxuICBcbiAgLnZtb2RhbF9fd2luZG93IHtcblx0Ly8gICBwYWRkaW5nLWJvdHRvbTogMTVweDtcblx0ICB3aWR0aDogOTUlO1xuXHQgIG1hcmdpbjogMCBhdXRvIDEuNzVyZW07XG5cdCAgYmFja2dyb3VuZDogI2ZmZjtcblx0ICBib3JkZXItcmFkaXVzOiA1cHg7XG5cdCAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDBweCk7XG5cdCAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycyBlYXNlLWluO1xuXHQgIFxuXHQgIC5nLWJ0biB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0cGFkZGluZzogMTBweCA0NXB4O1xuXHQgIH1cblx0Ly8gICBpbnB1dFt0eXBlPSd0ZXh0J10sXG5cdC8vICAgaW5wdXRbdHlwZT0nZW1haWwnXSxcblx0Ly8gICBpbnB1dFt0eXBlPSd0ZWwnXSxcblx0Ly8gICBpbnB1dFt0eXBlPSdkYXRlJ10sXG5cdC8vICAgc2VsZWN0LFxuXHQvLyAgIHRleHRhcmVhIHtcblx0Ly8gXHRtYXJnaW4tYm90dG9tOiAxNXB4O1xuXHQvLyBcdHBhZGRpbmc6IDhweDtcblx0Ly8gXHR3aWR0aDogMTAwJTtcblx0Ly8gXHRib3JkZXI6IG5vbmU7XG5cdC8vIFx0Ym94LXNoYWRvdzogbm9uZTtcblx0Ly8gXHRib3JkZXItcmFkaXVzOiA0cHg7XG5cdC8vICAgfVxuXHQgIC8vIGxhYmVsIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyA7bWFyZ2luLWJvdHRvbTogMTVweDsgfVxuXHQgIGxhYmVsIHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblx0XHRtYXJnaW4tcmlnaHQ6IDEwcHg7XG5cdFx0bWFyZ2luLWJvdHRvbTogMTVweDtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0Jjpob3ZlciB7XG5cdFx0ICBjb2xvcjogJGFjY2VudENvbG9yO1xuXHRcdH1cblx0XHQuZmlsdGVyX19jaGVja2JveCB7XG5cdFx0ICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0ICBtYXJnaW4tdG9wOiA0cHg7XG5cdFx0ICBtYXJnaW4tcmlnaHQ6IDhweDtcblx0XHQgIG1hcmdpbi1sZWZ0OiA4cHg7XG5cdFx0ICBmbGV4LXNocmluazogMDtcblx0XHQgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cdFx0ICBib3JkZXItcmFkaXVzOiA0cHg7XG5cdFx0ICBAaW5jbHVkZSBib3goMTRweCk7XG5cdFx0ICAmOmFmdGVyIHtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdGNvbnRlbnQ6ICcnO1xuXHRcdFx0bGVmdDogNTAlO1xuXHRcdFx0dG9wOiA1MCU7XG5cdFx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcblx0XHRcdEBpbmNsdWRlIGJveCg1MCUpO1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0XHRib3JkZXItcmFkaXVzOiAycHg7XG5cdFx0ICB9XG5cdFx0fVxuXHRcdGlucHV0W3R5cGU9J2NoZWNrYm94J10sXG5cdFx0aW5wdXRbdHlwZT0ncmFkaW8nXSB7XG5cdFx0ICBkaXNwbGF5OiBub25lO1xuXHRcdCAgJjpjaGVja2VkIH4gLmZpbHRlcl9fY2hlY2tib3gge1xuXHRcdFx0JjphZnRlciB7XG5cdFx0XHQgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnRDb2xvcjtcblx0XHRcdH1cblx0XHQgIH1cblx0XHR9XG5cdCAgfVxuICB9XG4gIFxuICAudm1vZGFsX19oZWFkZXIge1xuXHQvLyAgIGRpc3BsYXk6IGZsZXg7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdCAgcGFkZGluZzogMTBweCAxNXB4O1xuXHQgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0Ly8gICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTtcbiAgfVxuICAudm1vZGFsX190aXRsZSB7XG5cdCAgZm9udC1zaXplOiAxLjVyZW07XG5cdCAgZm9udC1mYW1pbHk6ICRtYWluRm9udDtcblx0ICAvLyBmb250LXdlaWdodDogNTAwO1xuXHQgIGNvbG9yOiAkYWNjZW50Q29sb3I7XG4gIH1cbiAgXG4gIC52bW9kYWxfX2Nsb3NlIHtcblx0ICAgZm9udC1zaXplOiAyOHB4O1xuXHQgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgLnZtb2RhbF9fYm9keSB7XG5cdC8vICAgcGFkZGluZzogMTBweCAxNXB4O1xuICB9XG4gIFxuICAudm1vZGFsX19ib2R5IHAge1xuXHQgIG1hcmdpbjogMCAwIDVweDtcbiAgfVxuICBcbiAgLnZtb2RhbF9fZm9vdGVyIHtcblx0ICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG5cdCAgZGlzcGxheTogLW1vei1mbGV4O1xuXHQgIGRpc3BsYXk6IC1tcy1mbGV4O1xuXHQgIGRpc3BsYXk6IC1vLWZsZXg7XG5cdCAgZGlzcGxheTogZmxleDtcblx0ICBwYWRkaW5nOiAxMHB4IDE1cHg7XG5cdCAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7XG5cdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICBcbiAgLnZtb2RhbF9fbGluayB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXHQvKnRleHQtYWxpZ246IHJpZ2h0OyovXG5cdGZvbnQtc2l6ZTogMTRweDtcblx0Ym9yZGVyOiBub25lO1xuXHRjb2xvcjogJG1haW5Db2xvcjtcblx0Ym94LXNoYWRvdzogbm9uZTtcbiAgfVxuICAiLCJAbWl4aW4gYm94KCR3aWR0aCwkaGVpZ2h0OiAkd2lkdGgpIHtcbiAgd2lkdGg6ICR3aWR0aDtcbiAgaGVpZ2h0OiAkaGVpZ2h0O1xufVxuQG1peGluIGNvdmVyLWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbkBtaXhpbiBwbGFjZWhvbGRlciB7XG4gIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7QGNvbnRlbnR9O1xuICA6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAge0Bjb250ZW50fTtcbiAgOjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgIHtAY29udGVudH07XG4gIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7QGNvbnRlbnR9O1xufVxuXG4kdW5pdHM6IDFweCAhZGVmYXVsdDtcbkBtaXhpbiBzY3JlZW4oJHJlcy1maXJzdCwgJHJlcy1sYXN0OiAkcmVzLWZpcnN0KSB7XG4gIEBpZiAkcmVzLWZpcnN0ID09ICRyZXMtbGFzdCB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogaWYodW5pdGxlc3MoJHJlcy1maXJzdCksICgkcmVzLWZpcnN0IC0gMSkgKiR1bml0cywgJHJlcy1maXJzdCkpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkcmVzLWZpcnN0IDwgJHJlcy1sYXN0IHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBpZih1bml0bGVzcygkcmVzLWZpcnN0KSwgJHJlcy1maXJzdCokdW5pdHMsICRyZXMtZmlyc3QpKSBhbmQgKG1heC13aWR0aDogaWYodW5pdGxlc3MoJHJlcy1sYXN0KSwgJHJlcy1sYXN0KiR1bml0cywgJHJlcy1sYXN0KSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5AbWl4aW4gbWluLXNjcmVlbigkcmVzKSB7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGlmKHVuaXRsZXNzKCRyZXMpLCAkcmVzKiR1bml0cywgJHJlcykpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5cbkBmdW5jdGlvbiByZW0oJHNpemUpIHtcbiAgQHJldHVybiAoJHNpemUgLyAkYmFzZS1mb250LXNpemUgKSAqIDFyZW1cbn1cbiIsIi5oZXJve1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvaGVyb19fYmcuanBnJyk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRtaW4taGVpZ2h0OiA5MDBweDtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCA1MHB4O1xyXG5cdHBhZGRpbmctdG9wOiA1MHB4O1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0YmFja2dyb3VuZC1zaXplOiAxMjYlO1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogNjUlIDMxJTtcclxuXHRcdHBhZGRpbmctdG9wOiAxMHB4O1xyXG5cdCAgfVxyXG5cdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJHRhYmxldCkge1xyXG5cdFx0bWluLWhlaWdodDogODAwcHg7XHJcblx0ICB9XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcblx0XHRtaW4taGVpZ2h0OiA3NTBweDtcclxuXHQgIH1cclxuXHQmOjpiZWZvcmV7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHRvcDogLTgwcHg7XHJcblx0XHRyaWdodDogMzgwcHg7XHJcblx0XHR3aWR0aDogNjZweDtcclxuXHRcdGhlaWdodDogNjZweDtcclxuXHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvaGVyb19fZWwtMS5wbmcnKTtcclxuXHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZChtYXgtd2lkdGg6ICRsYXJnZSkge1xyXG5cdFx0XHRkaXNwbGF5OiBub25lO1xyXG5cdFx0ICB9XHJcblx0fVxyXG5cdCY6OmFmdGVye1xyXG5cdFx0Y29udGVudDogJyc7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRib3R0b206IDQ1cHg7XHJcblx0XHRyaWdodDogNTYwcHg7XHJcblx0XHR3aWR0aDogMTY5cHg7XHJcblx0XHRoZWlnaHQ6IDE2OXB4O1xyXG5cdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvY29udGVudC9oZXJvX19lbC0yLnBuZycpO1xyXG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGxhcmdlKSB7XHJcblx0XHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0XHQgIH1cclxuXHR9XHJcblx0Jl9fZmlne1xyXG5cdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvY29udGVudC9oZXJvLWZpZy5wbmcnKTtcclxuXHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IDclIDEwMCU7XHJcblx0XHRib3R0b206IC0xMDBweDtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGxhcmdlKSB7XHJcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2NvbnRlbnQvaGVyby1maWctMi5wbmcnKTtcclxuXHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogLTQlIDEwMCU7XHJcblx0XHRcdGJvdHRvbTogMDtcclxuXHRcdCAgfVxyXG5cdH1cclxuXHQmX19ibG9ja3tcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdC8vIHotaW5kZXg6IDI7XHJcblx0XHRoMXtcclxuXHRcdFx0bWF4LXdpZHRoOiA3NTBweDtcclxuXHRcdFx0bWFyZ2luLWJvdHRvbTogNDBweDtcclxuXHRcdH1cclxuXHR9XHJcblx0Jl9faW5wdXRze1xyXG5cdFx0bWF4LXdpZHRoOiA4NTBweDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0XHRtYXJnaW4tYm90dG9tOiAxMDBweDtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJGxhcmdlKSB7XHJcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRcdG1hcmdpbi1ib3R0b206IDEyMHB4O1xyXG5cdFx0XHRpbnB1dHtcclxuXHRcdFx0XHRtYXJnaW4tYm90dG9tOiAxNHB4O1xyXG5cdFx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdFx0ICB9XHJcblx0XHRcdH1cclxuXHRcdCAgfVxyXG5cdFx0LmJ1dHRvbntcclxuXHRcdFx0d2lkdGg6IDI2NnB4O1xyXG5cdFx0XHRoZWlnaHQ6IDY1cHg7XHJcblx0XHRcdGJvcmRlci1yYWRpdXM6IDU1cHg7XHJcblx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0XHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0XHRcdGhlaWdodDogNTNweDtcclxuXHRcdFx0ICB9XHJcblx0XHR9XHJcblx0fVxyXG5cdCZfX2luZm97XHJcblx0XHRtYXgtd2lkdGg6IDUwMHB4O1xyXG5cdFx0cHtcclxuXHRcdFx0Zm9udC1zaXplOiAyOHB4O1xyXG5cdFx0XHRjb2xvcjogJGJsYWNrMjtcclxuXHRcdFx0dGV4dC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XHJcblx0XHRcdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0XHRcdG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kKG1heC13aWR0aDogJHRhYmxldCkge1xyXG5cdFx0XHRcdGZvbnQtc2l6ZTogMjJweDtcclxuXHRcdFx0ICB9XHJcblx0XHRcdHNwYW57XHJcblx0XHRcdFx0Y29sb3I6ICRhY2NlbnQyO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRoM3tcclxuXHRcdFx0Zm9udC1zaXplOiAzOHB4O1xyXG5cdFx0XHRmb250LXdlaWdodDogODAwO1xyXG5cdFx0XHR0ZXh0LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuXHRcdFx0Y29sb3I6ICRibGFjazI7XHJcblx0XHR9XHJcblxyXG5cdH1cclxufSJdfQ== */
